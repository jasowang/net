Bottom: 3d024ad6ccbd6a0fd1e8f61760b771ecb5b8c05d
Top:    2baf60bc959aecc3a7b22d202148eb78d1998ed3
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-06-29 14:40:27 +0800



---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 4c5373a..7ed26a1 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -2517,18 +2517,29 @@ static int tun_queue_resize(struct tun_struct *tun)
 	struct tun_file *tfile;
 	struct skb_array **arrays;
 	int n = tun->numqueues + tun->numdisabled;
-	int ret;
+	int ret, i;
+
+	printk("number of queues %d\n", n);
 
 	arrays = kmalloc(sizeof *arrays * n, GFP_KERNEL);
 	if (!arrays)
 		return -ENOMEM;
 
 	for (i = 0; i < tun->numqueues; i++) {
+		struct ptr_ring *ptr_ring;
 		tfile = rtnl_dereference(tun->tfiles[i]);
 		arrays[i] = &tfile->tx_array;
+		ptr_ring = (struct ptr_ring *)arrays[i];
+		printk("array[i] %p\n", &tfile->tx_array);
+		printk("producer[i] lock %p\n", &ptr_ring->producer_lock);
 	}
-	list_for_each_entry(tfile, &tun->disabled, next)
+	list_for_each_entry(tfile, &tun->disabled, next) {
 		arrays[i++] = &tfile->tx_array;
+		printk("array[i] %p\n", &tfile->tx_array);
+	}
+
+	if (i != n)
+		printk("error!\n");
 
 	ret = skb_array_resize_multiple(arrays, n,
 					dev->tx_queue_len, GFP_KERNEL);
@@ -2542,7 +2553,6 @@ static int tun_device_event(struct notifier_block *unused,
 {
 	struct net_device *dev = netdev_notifier_info_to_dev(ptr);
 	struct tun_struct *tun = netdev_priv(dev);
-	int i;
 
 	switch (event) {
 	case NETDEV_CHANGE_TX_QUEUE_LEN:
