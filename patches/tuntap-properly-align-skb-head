Bottom: 4b583b4c1596de869b38a56fe612fa3abf9195b8
Top:    b51fcf5db1c2ad7965bbcf9e03c2a78345f8f42d
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-10-26 11:51:56 +0800

tuntap: properly align skb->head before building skb

An unaligned alloc_frag->offset caused by previous allocation will
result an unaligned skb->head. This will lead unaligned
skb_shared_info and then unaligned dataref which requires to be
aligned during accessing. Fix this by aligning alloc_frag->offset
before the frag refilling.

Fixes: 0bbd7dad34f8 ("tun: make tun_build_skb() thread safe")
Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index ea29da9..82f761c 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -1444,6 +1444,7 @@ static struct sk_buff *tun_build_skb(struct tun_struct *tun,
 	buflen += SKB_DATA_ALIGN(len + pad);
 	rcu_read_unlock();
 
+	alloc_frag->offset = ALIGN((u64)alloc_frag->offset, TUN_RX_PAD);
 	if (unlikely(!skb_page_frag_refill(buflen, alloc_frag, GFP_KERNEL)))
 		return ERR_PTR(-ENOMEM);
