Bottom: 1da40b4e76554279395a47fec49f8fab4b61b6ea
Top:    bd9ad682dd3e18c7c11001e4be9b3456d52189c0
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-03-20 13:54:40 +0800

tun: introduce tap_get_skb_array()

Signed-off-by: Jason Wang <jasowang@redhat.com>

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index c418f0a..ff14c99 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -2613,6 +2613,19 @@ struct socket *tun_get_socket(struct file *file)
 }
 EXPORT_SYMBOL_GPL(tun_get_socket);
 
+struct skb_array *tap_get_skb_array(struct file *file)
+{
+       struct tun_file *tfile;
+
+       if (file->f_op != &tun_fops)
+               return ERR_PTR(-EINVAL);
+       tfile = file->private_data;
+       if (!tfile)
+               return ERR_PTR(-EBADFD);
+       return &tfile->tx_array;
+}
+EXPORT_SYMBOL_GPL(tap_get_skb_array);
+
 module_init(tun_init);
 module_exit(tun_cleanup);
 MODULE_DESCRIPTION(DRV_DESCRIPTION);
diff --git a/include/linux/if_tap.h b/include/linux/if_tap.h
index 3482c3c..a99f3a1 100644
--- a/include/linux/if_tap.h
+++ b/include/linux/if_tap.h
@@ -3,6 +3,7 @@
 
 #if IS_ENABLED(CONFIG_TAP)
 struct socket *tap_get_socket(struct file *);
+struct skb_array *tap_get_skb_array(struct file *);
 #else
 #include <linux/err.h>
 #include <linux/errno.h>
@@ -12,6 +13,10 @@ static inline struct socket *tap_get_socket(struct file *f)
 {
 	return ERR_PTR(-EINVAL);
 }
+static inline struct socket *tap_get_skb_array(struct file *f)
+{
+	return ERR_PTR(-EINVAL);
+}
 #endif /* CONFIG_TAP */
 
 #include <net/sock.h>
