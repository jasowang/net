Bottom: ced29266dfd77edb5f0878cbaa2993b4d79f6f49
Top:    98729052cb05217bf6462e4de6412c7b107fb219
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-05-31 17:27:45 +0800

vhost_net: simplify vhost_net_flush()

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 45238fc..2f7e3bb 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -1012,18 +1012,21 @@ static void vhost_net_flush_vq(struct vhost_net *n, int index)
 
 static void vhost_net_flush(struct vhost_net *n)
 {
+	struct vhost_net_virtqueue *nvq = &n->vqs[VHOST_NET_VQ_TX];
+	struct vhost_virtqueue *vq = &nvq->vq;
+
 	vhost_net_flush_vq(n, VHOST_NET_VQ_TX);
 	vhost_net_flush_vq(n, VHOST_NET_VQ_RX);
-	if (n->vqs[VHOST_NET_VQ_TX].ubufs) {
-		mutex_lock(&n->vqs[VHOST_NET_VQ_TX].vq.mutex);
+	if (nvq->ubufs) {
+		mutex_lock(&vq->mutex);
 		n->tx_flush = true;
-		mutex_unlock(&n->vqs[VHOST_NET_VQ_TX].vq.mutex);
+		mutex_unlock(&vq->mutex);
 		/* Wait for all lower device DMAs done. */
-		vhost_net_ubuf_put_and_wait(n->vqs[VHOST_NET_VQ_TX].ubufs);
-		mutex_lock(&n->vqs[VHOST_NET_VQ_TX].vq.mutex);
+		vhost_net_ubuf_put_and_wait(nvq->ubufs);
+		mutex_lock(&vq->mutex);
 		n->tx_flush = false;
-		atomic_set(&n->vqs[VHOST_NET_VQ_TX].ubufs->refcount, 1);
-		mutex_unlock(&n->vqs[VHOST_NET_VQ_TX].vq.mutex);
+		atomic_set(&nvq->ubufs->refcount, 1);
+		mutex_unlock(&vq->mutex);
 	}
 }
