Bottom: 7b77e6494ab97efc7a70b86ee3a4ab9db0fd4552
Top:    58d92961e9f112b0f921aca6424c5fed32dcea28
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-03 16:22:59 +0800

tun: add missing xdp flush

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index a0c5cb1..c6be4ef 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -181,6 +181,7 @@ struct tun_file {
 	struct tun_struct *detached;
 	struct ptr_ring tx_ring;
 	struct xdp_rxq_info xdp_rxq;
+	int xmit_flush_pending;
 };
 
 struct tun_flow_entry {
@@ -1669,6 +1670,7 @@ static struct sk_buff *tun_build_skb(struct tun_struct *tun,
 			if (err)
 				goto err_redirect;
 			rcu_read_unlock();
+			++tfile->xmit_flush_pending;
 			return NULL;
 		case XDP_TX:
 			xdp_xmit = true;
@@ -1986,6 +1988,11 @@ static ssize_t tun_chr_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	result = tun_get_user(tun, tfile, NULL, from,
 			      file->f_flags & O_NONBLOCK, false);
 
+	if (tfile->xmit_flush_pending) {
+		tfile->xmit_flush_pending = 0;
+		xdp_do_flush_map();
+	}
+
 	tun_put(tun);
 	return result;
 }
@@ -2322,6 +2329,13 @@ static int tun_sendmsg(struct socket *sock, struct msghdr *m, size_t total_len)
 	ret = tun_get_user(tun, tfile, m->msg_control, &m->msg_iter,
 			   m->msg_flags & MSG_DONTWAIT,
 			   m->msg_flags & MSG_MORE);
+
+	if (tfile->xmit_flush_pending &&
+	    (!(m->msg_flags & MSG_MORE) || tfile->xmit_flush_pending >= 64 )) {
+		tfile->xmit_flush_pending = 0;
+		xdp_do_flush_map();
+	}
+
 	tun_put(tun);
 	return ret;
 }
@@ -3153,6 +3167,7 @@ static int tun_chr_open(struct inode *inode, struct file * file)
 	sock_set_flag(&tfile->sk, SOCK_ZEROCOPY);
 
 	memset(&tfile->tx_ring, 0, sizeof(tfile->tx_ring));
+	tfile->xmit_flush_pending = 0;
 
 	return 0;
 }
