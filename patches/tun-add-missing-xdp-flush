Bottom: fc06a8968b7fb49657ca8d0fc1f7a87243cd4d54
Top:    c2cb5827d5058d1c60153dfc5585a8f00476bbc3
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-03 16:22:59 +0800

tun: add missing xdp flush

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 2bc18b1..a95087b 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -181,6 +181,7 @@ struct tun_file {
 	struct tun_struct *detached;
 	struct ptr_ring tx_ring;
 	struct xdp_rxq_info xdp_rxq;
+	bool xdp_flush_needed;
 };
 
 struct tun_flow_entry {
@@ -1671,6 +1672,7 @@ static struct sk_buff *tun_build_skb(struct tun_struct *tun,
 			if (err)
 				goto err_redirect;
 			rcu_read_unlock();
+			tfile->xdp_flush_needed = true;
 			return NULL;
 		case XDP_TX:
 			xdp_xmit = true;
@@ -1988,6 +1990,11 @@ static ssize_t tun_chr_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	result = tun_get_user(tun, tfile, NULL, from,
 			      file->f_flags & O_NONBLOCK, false);
 
+	if (tfile->xdp_flush_needed) {
+		tfile->xdp_flush_needed = false;
+		xdp_do_flush_map();
+	}
+
 	tun_put(tun);
 	return result;
 }
@@ -2324,6 +2331,12 @@ static int tun_sendmsg(struct socket *sock, struct msghdr *m, size_t total_len)
 	ret = tun_get_user(tun, tfile, m->msg_control, &m->msg_iter,
 			   m->msg_flags & MSG_DONTWAIT,
 			   m->msg_flags & MSG_MORE);
+
+	if (tfile->xdp_flush_needed && !(m->msg_flags & MSG_MORE)) {
+		tfile->xdp_flush_needed = false;
+		xdp_do_flush_map();
+	}
+
 	tun_put(tun);
 	return ret;
 }
@@ -3155,6 +3168,7 @@ static int tun_chr_open(struct inode *inode, struct file * file)
 	sock_set_flag(&tfile->sk, SOCK_ZEROCOPY);
 
 	memset(&tfile->tx_ring, 0, sizeof(tfile->tx_ring));
+	tfile->xdp_flush_needed = false;
 
 	return 0;
 }
