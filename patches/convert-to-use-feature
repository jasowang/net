Bottom: 5aaece9abb48395eb9c30a50541240ae0394cc19
Top:    efc4d9b64a11079d7b3c03e4c4caf6522959f0f1
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-23 11:44:36 +0800

convert to use feature negotiation.

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 30f46df..ad09121 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -61,7 +61,8 @@ MODULE_PARM_DESC(experimental_zcopytx, "Enable Zero Copy TX;"
 enum {
 	VHOST_NET_FEATURES = VHOST_FEATURES |
 			 (1ULL << VHOST_NET_F_VIRTIO_NET_HDR) |
-			 (1ULL << VIRTIO_NET_F_MRG_RXBUF)
+			 (1ULL << VIRTIO_NET_F_MRG_RXBUF) |
+			 (1ULL << VHOST_F_DEVICE_IOTLB)
 };
 
 enum {
@@ -1098,6 +1099,11 @@ static int vhost_net_set_features(struct vhost_net *n, u64 features)
 		mutex_unlock(&n->dev.mutex);
 		return -EFAULT;
 	}
+	if ((features & (1 << VHOST_F_DEVICE_IOTLB))) {
+		if (vhost_init_device_iotlb(&n->dev, true))
+			return -EFAULT;
+	}
+
 	for (i = 0; i < VHOST_NET_VQ_MAX; ++i) {
 		mutex_lock(&n->vqs[i].vq.mutex);
 		n->vqs[i].vq.acked_features = features;
diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index e97f811..84c1ed0 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -1542,10 +1542,12 @@ long vhost_vring_ioctl(struct vhost_dev *d, int ioctl, void __user *argp)
 }
 EXPORT_SYMBOL_GPL(vhost_vring_ioctl);
 
-static int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled)
+int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled)
 {
 	struct vhost_umem *niotlb, *oiotlb;
 
+	printk("init device iotlb!\n");
+
 	if (enabled) {
 		niotlb = vhost_umem_alloc();
 		if (!niotlb)
@@ -1560,8 +1562,11 @@ static int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled)
 
 	vhost_umem_clean(oiotlb);
 
+	printk("succeed!\n");
+
 	return 0;
 }
+EXPORT_SYMBOL_GPL(vhost_init_device_iotlb);
 
 static void vhost_complete_iotlb_update(struct vhost_dev *d,
 					struct vhost_iotlb_entry *entry)
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index ae64375..50353d5 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -219,6 +219,7 @@ ssize_t vhost_chr_read_iter(struct vhost_dev *dev, struct iov_iter *to,
 			    int noblock);
 ssize_t vhost_chr_write_iter(struct vhost_dev *dev,
                              struct iov_iter *from);
+int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled);
 
 #define vq_err(vq, fmt, ...) do {                                  \
 		printk(pr_fmt(fmt), ##__VA_ARGS__);       \
diff --git a/include/uapi/linux/vhost.h b/include/uapi/linux/vhost.h
index d4b24a1..2e4793a 100644
--- a/include/uapi/linux/vhost.h
+++ b/include/uapi/linux/vhost.h
@@ -73,12 +73,6 @@ struct vhost_vring_iotlb_entry {
 	__u64 userspace_addr;
 };
 
-#define VHOST_CAP_IOTLB 0x1
-
-struct vhost_ctl_msg {
-  __u64 cap;
-};
-
 struct vhost_iotlb_msg {
   __u64 iova;
   __u64 size;
@@ -95,13 +89,11 @@ struct vhost_iotlb_msg {
 };
 
 #define VHOST_IOTLB_MSG 0x1
-#define VHOST_CTL_MSG   0x2
 
 struct vhost_msg {
   int type;
   union {
     struct vhost_iotlb_msg iotlb;
-    struct vhost_ctl_msg ctl;
   };
 };
 
@@ -213,6 +205,8 @@ struct vhost_memory {
 #define VHOST_F_LOG_ALL 26
 /* vhost-net should add virtio_net_hdr for RX, and strip for TX packets. */
 #define VHOST_NET_F_VIRTIO_NET_HDR 27
+/* Vhost have device IOTLB */
+#define VHOST_F_DEVICE_IOTLB 28
 
 /* VHOST_SCSI specific definitions */
