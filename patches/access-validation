Bottom: cb7de6504ca3d1a7fbba6b9bd82b6f232bd235ab
Top:    9070d73cddc0bec3846780f1479e2beaa60497bc
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-23 11:58:01 +0800

access validation

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index c01f09e..440979b 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -309,7 +309,6 @@ static void vhost_vq_reset(struct vhost_dev *dev,
 	vhost_reset_is_le(vq);
 	vhost_disable_cross_endian(vq);
 	vq->busyloop_timeout = 0;
-	vq->iotlb_call = NULL;
 	/* FIXME: no usage of vq->mem and vq->iotlb ? */
 	vq->umem = NULL;
 }
@@ -937,6 +936,24 @@ static void vhost_iotlb_notify_vq(struct vhost_dev *d,
 	spin_unlock(&d->iotlb_lock);
 }
 
+static int umem_access_ok(u64 uaddr, u64 size, int access)
+{
+	int ret;
+
+	if ((access & VHOST_ACCESS_RO) && !access_ok(VERIFY_READ,
+							uaddr, size)) {
+		printk("RO fail!\n");
+		return -EFAULT;
+	}
+	if ((access & VHOST_ACCESS_WO) && !access_ok(VERIFY_WRITE,
+							uaddr, size)) {
+		printk("WO fail!\n");
+		return -EFAULT;
+	}
+
+	return 0;
+}
+
 int vhost_process_iotlb_msg(struct vhost_dev *dev,
 			    struct vhost_iotlb_msg *msg)
 {
@@ -947,8 +964,16 @@ int vhost_process_iotlb_msg(struct vhost_dev *dev,
 	vhost_dev_lock_vqs(dev);
 	switch(msg->type) {
 	case VHOST_IOTLB_UPDATE:
-		if (!dev->iotlb)
+		if (!dev->iotlb) {
+			ret = -EFAULT;
 			goto done;
+		}
+		if (umem_access_ok(msg->uaddr, msg->size, msg->perm)) {
+			printk("fail to validate umem access at %lx"
+				" size %lx", msg->uaddr, msg->size);
+			ret = -EFAULT;
+			goto done;
+		}
 		if (vhost_new_umem_range(dev->iotlb, msg->iova, msg->size,
 					 msg->iova + msg->size - 1,
                                          msg->uaddr, msg->perm)) {
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index 1d7c4ee..860713ea 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -87,7 +87,6 @@ struct vhost_virtqueue {
 	struct file *kick;
 	struct file *call;
 	struct file *error;
-	struct file *iotlb_call;
 	struct eventfd_ctx *call_ctx;
 	struct eventfd_ctx *error_ctx;
 	struct eventfd_ctx *log_ctx;
