Bottom: 2f2a3f41c63fa8653e5bd818a06b80d89ec1a161
Top:    e8c015c0897afd7d884e08bea8c96b17d9fbf1da
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-07-25 14:04:44 +0800

net: export do_xdp_generic()

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index 3a3cdc1..0fa1bbb 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -3261,6 +3261,7 @@ static inline void dev_consume_skb_any(struct sk_buff *skb)
 	__dev_kfree_skb_any(skb, SKB_REASON_CONSUMED);
 }
 
+int do_xdp_generic(struct bpf_prog *xdp_prog, struct sk_buff *skb);
 int netif_rx(struct sk_buff *skb);
 int netif_rx_ni(struct sk_buff *skb);
 int netif_receive_skb(struct sk_buff *skb);
diff --git a/net/core/dev.c b/net/core/dev.c
index 2772525..11eb5be 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -3944,7 +3944,7 @@ static void generic_xdp_tx(struct sk_buff *skb, struct bpf_prog *xdp_prog)
 
 static struct static_key generic_xdp_needed __read_mostly;
 
-static int do_xdp_generic(struct bpf_prog *xdp_prog, struct sk_buff *skb)
+int do_xdp_generic(struct bpf_prog *xdp_prog, struct sk_buff *skb)
 {
 	if (xdp_prog) {
 		u32 act = netif_receive_generic_xdp(skb, xdp_prog);
@@ -3970,6 +3970,7 @@ static int do_xdp_generic(struct bpf_prog *xdp_prog, struct sk_buff *skb)
 	kfree_skb(skb);
 	return XDP_DROP;
 }
+EXPORT_SYMBOL_GPL(do_xdp_generic);
 
 static int netif_rx_internal(struct sk_buff *skb)
 {
