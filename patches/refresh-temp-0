Bottom: 69f001f944f5ee8e89bd266c06934b7b7506cb74
Top:    a9ea452ceb3809dbf3aa49f6f75b4a36bc8254c6
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-05-17 20:47:43 +0800

Refresh of virito-net-correctly-free

---

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 910d2e7..53c4014 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -699,6 +699,7 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 	struct virtio_net_hdr_mrg_rxbuf *hdr = buf;
 	u16 num_buf = virtio16_to_cpu(vi->vdev, hdr->num_buffers);
 	struct page *page = virt_to_head_page(buf);
+	struct page *xdp_page;
 	int offset = buf - page_address(page);
 	struct sk_buff *head_skb, *curr_skb;
 	struct bpf_prog *xdp_prog;
@@ -712,7 +713,6 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 	xdp_prog = rcu_dereference(rq->xdp_prog);
 	if (xdp_prog) {
 		struct xdp_frame *xdpf;
-		struct page *xdp_page;
 		struct xdp_buff xdp;
 		void *data;
 		u32 act;
@@ -731,7 +731,7 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 						      VIRTIO_XDP_HEADROOM,
 						      &len);
 			if (!xdp_page)
-				goto err_xdp;
+				goto err_linearize;
 			offset = VIRTIO_XDP_HEADROOM;
 		} else {
 			xdp_page = page;
@@ -786,8 +786,6 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 			err = __virtnet_xdp_xmit(vi, xdpf);
 			if (unlikely(err)) {
 				trace_xdp_exception(vi->dev, xdp_prog, act);
-				if (unlikely(xdp_page != page))
-					put_page(xdp_page);
 				goto err_xdp;
 			}
 			*xdp_xmit = true;
@@ -797,11 +795,8 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 			goto xdp_xmit;
 		case XDP_REDIRECT:
 			err = xdp_do_redirect(dev, &xdp, xdp_prog);
-			if (err) {
-				if (unlikely(xdp_page != page))
-					put_page(xdp_page);
+			if (err)
 				goto err_xdp;
-			}
 			*xdp_xmit = true;
 			if (unlikely(xdp_page != page))
 				put_page(page);
@@ -889,6 +884,9 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 	return head_skb;
 
 err_xdp:
+	if (unlikely(xdp_page != page))
+		put_page(xdp_page);
+err_linearize:
 	rcu_read_unlock();
 err_skb:
 	put_page(page);
