Bottom: 579b56b3b42598c5db664ef276979ce37b7c6416
Top:    ab00d6116ed2546a0cb265c69dfa9e3404895bdd
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-18 16:28:04 +0800

Refresh of tuntap-doing-wakeup-correctly

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 425e983..eaf51bb 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -580,11 +580,13 @@ static void tun_detach_all(struct net_device *dev)
 	for (i = 0; i < n; i++) {
 		tfile = rtnl_dereference(tun->tfiles[i]);
 		BUG_ON(!tfile);
+		tfile->socket.sk->sk_shutdown = RCV_SHUTDOWN;
 		tfile->socket.sk->sk_data_ready(tfile->socket.sk);
 		RCU_INIT_POINTER(tfile->tun, NULL);
 		--tun->numqueues;
 	}
 	list_for_each_entry(tfile, &tun->disabled, next) {
+		tfile->socket.sk->sk_shutdown = RCV_SHUTDOWN;
 		tfile->socket.sk->sk_data_ready(tfile->socket.sk);
 		RCU_INIT_POINTER(tfile->tun, NULL);
 	}
@@ -652,6 +654,7 @@ static int tun_attach(struct tun_struct *tun, struct file *file, bool skip_filte
 
 	tun_set_real_num_queues(tun);
 
+	tfile->socket.sk->sk_shutdown &= ~RCV_SHUTDOWN;
 	/* device is allowed to go away first, so no need to hold extra
 	 * refcnt.
 	 */
