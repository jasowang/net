Bottom: 46882658faa9df91e831be8e5d751d10359701dc
Top:    e2a20bb253bb4adce12436705eebac81a0a8089d
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-06-29 16:44:00 +0800

Refresh of tun-introduce-tx-array-mode

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index a92f947..ed76128 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -516,7 +516,7 @@ static struct tun_struct *tun_enable_queue(struct tun_file *tfile)
 	return tun;
 }
 
-static void tun_queue_purge(struct tun_struct *tun, struct tun_file *tfile)
+static void tun_queue_purge(struct tun_file *tfile)
 {
 	struct sk_buff *skb;
 
@@ -552,7 +552,7 @@ static void __tun_detach(struct tun_file *tfile, bool clean)
 		synchronize_net();
 		tun_flow_delete_by_queue(tun, tun->numqueues + 1);
 		/* Drop read queue */
-		tun_queue_purge(tun, tfile);
+		tun_queue_purge(tfile);
 		tun_set_real_num_queues(tun);
 	} else if (tfile->detached && clean) {
 		tun = tun_enable_queue(tfile);
@@ -605,12 +605,12 @@ static void tun_detach_all(struct net_device *dev)
 	for (i = 0; i < n; i++) {
 		tfile = rtnl_dereference(tun->tfiles[i]);
 		/* Drop read queue */
-		tun_queue_purge(tun, tfile);
+		tun_queue_purge(tfile);
 		sock_put(&tfile->sk);
 	}
 	list_for_each_entry_safe(tfile, tmp, &tun->disabled, next) {
 		tun_enable_queue(tfile);
-		tun_queue_purge(tun, tfile);
+		tun_queue_purge(tfile);
 		sock_put(&tfile->sk);
 	}
 	BUG_ON(tun->numdisabled != 0);
