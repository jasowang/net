Bottom: 1a49fd630e314cd78ea77386ca3826299c5a4d5f
Top:    765f6fdc791f1b8f98f1a0181783191413ee08e2
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-04-19 16:48:59 +0800

Refresh of virtio-correctly-track-used

---

diff --git a/drivers/virtio/virtio_ring.c b/drivers/virtio/virtio_ring.c
index 0515dca..da2a192 100644
--- a/drivers/virtio/virtio_ring.c
+++ b/drivers/virtio/virtio_ring.c
@@ -110,6 +110,7 @@ struct vring_virtqueue {
 
 			/* Driver ring wrap counter. */
 			u8 wrap_counter;
+			u8 used_wrap_counter;
 
 			/* Index of the next avail descriptor. */
 			unsigned int next_avail_idx;
@@ -1061,10 +1062,9 @@ static inline bool more_used_packed(const struct vring_virtqueue *vq)
 	last_used = vq->last_used_idx;
 	flags = virtio16_to_cpu(vq->vq.vdev,
 				vq->vring_packed.desc[last_used].flags);
-	avail = flags & VRING_DESC_F_AVAIL(1);
 	used = flags & VRING_DESC_F_USED(1);
 
-	return avail == used;
+	return used == vq->used_wrap_counter;
 }
 
 static inline bool more_used(const struct vring_virtqueue *vq)
@@ -1172,8 +1172,10 @@ void *virtqueue_get_buf_ctx_packed(struct virtqueue *_vq, unsigned int *len,
 	detach_buf_packed(vq, i, ctx);
 
 	vq->last_used_idx += vq->desc_state[i].num;
-	if (vq->last_used_idx >= vq->vring_packed.num)
+	if (vq->last_used_idx >= vq->vring_packed.num) {
 		vq->last_used_idx -= vq->vring_packed.num;
+		vq->used_wrap_counter ^= 1;
+	}
 
 	wrap_counter = vq->wrap_counter;
 	if (vq->last_used_idx > vq->next_avail_idx)
@@ -1643,6 +1645,7 @@ struct virtqueue *__vring_new_virtqueue(unsigned int index,
 		vq->vring_packed = vring.vring_packed;
 		vq->next_avail_idx = 0;
 		vq->wrap_counter = 1;
+		vq->used_wrap_counter = 1;
 		vq->event_flags_shadow = 0;
 	} else {
 		vq->vring = vring.vring_split;
