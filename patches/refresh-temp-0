Bottom: 3f6f59793f5bcd400670a2d2ea6c76c611aee1d1
Top:    786389540dff852a12be5930ef19aea80ffa2230
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-06-16 17:01:17 +0800

Refresh of tuntap-convert-to-napi

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index bbf4cfb..48ee145 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -169,7 +169,6 @@ struct tun_file {
 	struct list_head next;
 	struct tun_struct *detached;
 	struct napi_struct napi;
-	struct work_struct poll_work;
 };
 
 struct tun_flow_entry {
@@ -530,7 +529,6 @@ static void __tun_detach(struct tun_file *tfile, bool clean)
 	tun = rtnl_dereference(tfile->tun);
 
 	if (tun) {
-		cancel_work_sync(&tfile->poll_work);
 		napi_disable(&tfile->napi);
 		netif_napi_del(&tfile->napi);
 	}
@@ -621,23 +619,12 @@ static void tun_detach_all(struct net_device *dev)
 		module_put(THIS_MODULE);
 }
 
-static void poll_work(struct work_struct *work)
-{
-	struct tun_file *tfile = container_of(work, struct tun_file, poll_work);
-
-
-	local_bh_disable();
-	napi_schedule(&tfile->napi);
-	local_bh_enable();
-}
-
 static int tun_poll(struct napi_struct *napi, int budget)
 {
 	struct tun_file *tfile = container_of(napi, struct tun_file, napi);
 	struct sk_buff *skb;
 	unsigned received = 0;
 
-again:
 	while (received < budget &&
 	       (skb = skb_dequeue(&tfile->socket.sk->sk_write_queue))
 		!= NULL) {
@@ -650,12 +637,9 @@ again:
 		if (skb_peek(&tfile->socket.sk->sk_write_queue) &&
 		    unlikely(napi_schedule_prep(napi))) {
 			__napi_schedule(napi);
-			goto again;
 		}
 	}
 
-	if (received > 1)
-		printk("received %d\n", received);
 	return received;
 }
 
@@ -1384,12 +1368,11 @@ static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 	skb_probe_transport_header(skb, 0);
 
 	rxhash = skb_get_hash(skb);
-//	netif_rx_ni(skb);
-
 	skb_queue_tail(&tfile->socket.sk->sk_write_queue, skb);
 
-	queue_work(system_unbound_wq, &tfile->poll_work);
-//	schedule_work(&tfile->poll_work);
+	local_bh_disable();
+	napi_schedule(&tfile->napi);
+	local_bh_enable();
 
 	stats = get_cpu_ptr(tun->pcpu_stats);
 	u64_stats_update_begin(&stats->syncp);
@@ -2388,7 +2371,6 @@ static int tun_chr_open(struct inode *inode, struct file * file)
 	INIT_LIST_HEAD(&tfile->next);
 
 	sock_set_flag(&tfile->sk, SOCK_ZEROCOPY);
-	INIT_WORK(&tfile->poll_work, poll_work);
 
 	return 0;
 }
