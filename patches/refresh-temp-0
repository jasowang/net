Bottom: 0659e0337a3657e227be50637f2db5f9b74aff0a
Top:    574cb4a88a884db790c980a8e82a57c32feede30
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-17 10:47:20 +0800

Refresh of tuntap-introduce-tx-skb-ring

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 2ad88e2..01e2d70 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -930,7 +930,7 @@ static netdev_tx_t tun_net_xmit(struct sk_buff *skb, struct net_device *dev)
 		spin_lock(&tfile->wlock);
 
 		head = tfile->head;
-		tail = smp_load_acquire(tfile->tail);
+		tail = smp_load_acquire(&tfile->tail);
 
 		if (CIRC_SPACE(head, tail, TUN_RING_SIZE) >= 1) {
 			struct tun_desc *desc = &tfile->tx_descs[head];
@@ -948,7 +948,7 @@ static netdev_tx_t tun_net_xmit(struct sk_buff *skb, struct net_device *dev)
 			goto drop;
 		}
 
-		spin_unlock(&tfile->wlock)
+		spin_unlock(&tfile->wlock);
 	} else {
 		/* Enqueue packet */
 		skb_queue_tail(&tfile->socket.sk->sk_receive_queue, skb);
@@ -1570,7 +1570,7 @@ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 
 		spin_lock(&tfile->rlock);
 		/* Read index before reading contents at that index. */
-		head = smp_load_acquire(tfile->head);
+		head = smp_load_acquire(&tfile->head);
 		tail = tfile->tail;
 
 		if (CIRC_CNT(head, tail, TUN_RING_SIZE) >= 1) {
