Bottom: b7eecf757098a9b7991293a2470ae16319914dd4
Top:    613ddf50345ef67b5ea83edbd3934cd36834037a
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-12-19 16:36:23 +0800

Refresh of tuntap-rename-struct

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 3c7da00..c9a5af6 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -238,6 +238,7 @@ struct tun_struct {
 	struct tun_pcpu_stats __percpu *pcpu_stats;
 	struct bpf_prog __rcu *xdp_prog;
 	struct tun_prog __rcu *steering_prog;
+	struct tun_prog __rcu *filter_prog;
 };
 
 static int tun_napi_receive(struct napi_struct *napi, int budget)
@@ -915,6 +916,8 @@ static int run_filter(struct tap_filter *filter, const struct sk_buff *skb)
 	return 0;
 }
 
+
+
 /*
  * Checks whether the packet is accepted or not.
  * Returns: 0 - drop, !=0 - accept
@@ -2070,6 +2073,7 @@ static void tun_free_netdev(struct net_device *dev)
 	tun_flow_uninit(tun);
 	security_tun_dev_free_security(tun->security);
 	__tun_set_ebpf(tun, &tun->steering_prog, NULL);
+	__tun_set_ebpf(tun, &tun->filter_prog, NULL);
 }
 
 static void tun_setup(struct net_device *dev)
@@ -2851,6 +2855,10 @@ static long __tun_chr_ioctl(struct file *file, unsigned int cmd,
 		ret = tun_set_ebpf(tun, &tun->steering_prog, argp);
 		break;
 
+	case TUNSETFILTEREBPF:
+		ret = tun_set_ebpf(tun, &tun->filter_prog, argp);
+		break;
+
 	default:
 		ret = -EINVAL;
 		break;
