Bottom: 29df4345a0ed6ff13e96c33432579abcc1af3637
Top:    76871285f259692765aacfd8cf7b84cb63af2fc1
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-05 11:11:36 +0800

Refresh of tun-allow-attach-ebpf-filter

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 6e9452b..9fc8b70 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -241,6 +241,11 @@ struct tun_struct {
 	struct tun_prog __rcu *filter_prog;
 };
 
+struct veth {
+	__be16 h_vlan_proto;
+	__be16 h_vlan_TCI;
+};
+
 static int tun_napi_receive(struct napi_struct *napi, int budget)
 {
 	struct tun_file *tfile = container_of(napi, struct tun_file, napi);
@@ -1030,13 +1035,16 @@ static netdev_tx_t tun_net_xmit(struct sk_buff *skb, struct net_device *dev)
 		goto drop;
 
 	len = run_ebpf_filter(tun, skb, len);
-	if (!len)
-		goto drop;
 
-	if (unlikely(skb_orphan_frags_rx(skb, GFP_ATOMIC)))
+	/* Trim extra bytes since we may inster vlan proto & TCI
+	 * in tun_put_user().
+	 */
+	if (skb_vlan_tag_present(skb))
+		len -= skb_vlan_tag_present(skb) ? sizeof(struct veth) : 0;
+	if (len <= 0 || pskb_trim(skb, len))
 		goto drop;
 
-	if (pskb_trim(skb, len))
+	if (unlikely(skb_orphan_frags_rx(skb, GFP_ATOMIC)))
 		goto drop;
 
 	skb_tx_timestamp(skb);
@@ -1925,10 +1933,7 @@ static ssize_t tun_put_user(struct tun_struct *tun,
 
 	if (vlan_hlen) {
 		int ret;
-		struct {
-			__be16 h_vlan_proto;
-			__be16 h_vlan_TCI;
-		} veth;
+		struct veth veth;
 
 		veth.h_vlan_proto = skb->vlan_proto;
 		veth.h_vlan_TCI = htons(skb_vlan_tag_get(skb));
