Bottom: ccb7531bdc15c607f048af065601fa2a3e1de9ae
Top:    9355bdc6d05d627fef534117248d996cbca7929f
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-17 13:58:16 +0800

Refresh of skb_ring-abstraction

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 6d1bb99..8fafb9e 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -1028,7 +1028,7 @@ static netdev_tx_t tun_net_xmit(struct sk_buff *skb, struct net_device *dev)
 	nf_reset(skb);
 
 	if (tun->flags & IFF_TX_RING) {
-		if (!skb_ring_queue(&tfile->tx_ring, skb))
+		if (skb_ring_queue(&tfile->tx_ring, skb))
 			goto drop;
 	} else {
 		/* Enqueue packet */
@@ -2524,7 +2524,8 @@ static int tun_chr_open(struct inode *inode, struct file * file)
 	INIT_LIST_HEAD(&tfile->next);
 
 	sock_set_flag(&tfile->sk, SOCK_ZEROCOPY);
-	if (!skb_ring_init(&tfile->tx_ring, TUN_RING_SIZE)) {
+
+	if (skb_ring_init(&tfile->tx_ring, TUN_RING_SIZE)) {
 		sock_put(&tfile->sk);
 		return -ENOMEM;
 	}
