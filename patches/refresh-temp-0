Bottom: 7f0c258b174b2dbd7f5d84172927b66716c7c803
Top:    e5a2b0024cb142389ac00cc7ac18dc9614b47b33
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-12-25 15:43:28 +0800

Refresh of tuntap-xdp-transmission

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 18d6579..2808029 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -654,6 +654,7 @@ static void tun_ptr_free(void *ptr)
 		return;
 	if (tun_is_xdp_buff(ptr)) {
 		struct xdp_buff *xdp = tun_ptr_to_xdp(ptr);
+
 		put_page(virt_to_head_page(xdp->data));
 	} else
 		__skb_array_destroy_skb(ptr);
@@ -661,7 +662,7 @@ static void tun_ptr_free(void *ptr)
 
 static void tun_queue_purge(struct tun_file *tfile)
 {
-	void * ptr;
+	void *ptr;
 
 	while ((ptr = ptr_ring_consume(&tfile->tx_ring)) != NULL)
 		tun_ptr_free(ptr);
@@ -1254,7 +1255,8 @@ static int tun_xdp_xmit(struct net_device *dev, struct xdp_buff *xdp)
 	tfile = rcu_dereference(tun->tfiles[smp_processor_id() %
 					    numqueues]);
 	/* Encode the XDP flag into lowest bit for consumer to differ
-	 * XDP buffer from sk_buff. */
+	 * XDP buffer from sk_buff.
+	 */
 	if (ptr_ring_produce(&tfile->tx_ring, tun_xdp_to_ptr(buff))) {
 		this_cpu_inc(tun->pcpu_stats->tx_dropped);
 		ret = -ENOSPC;
@@ -1274,8 +1276,6 @@ static void tun_xdp_flush(struct net_device *dev)
 	if (tfile->flags & TUN_FASYNC)
 		kill_fasync(&tfile->fasync, SIGIO, POLL_IN);
 	tfile->socket.sk->sk_data_ready(tfile->socket.sk);
-
-	return;
 }
 
 static const struct net_device_ops tap_netdev_ops = {
@@ -2092,7 +2092,6 @@ static void *tun_ring_recv(struct tun_file *tfile, int noblock, int *err)
 	return ptr;
 }
 
-
 static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 			   struct iov_iter *to,
 			   int noblock, void *ptr)
@@ -2114,10 +2113,12 @@ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 
 	if (tun_is_xdp_buff(ptr)) {
 		struct xdp_buff *xdp = tun_ptr_to_xdp(ptr);
+
 		ret = tun_put_user_xdp(tun, tfile, xdp, to);
 		put_page(virt_to_head_page(xdp->data));
 	} else {
 		struct sk_buff *skb = ptr;
+
 		ret = tun_put_user(tun, tfile, skb, to);
 		if (unlikely(ret < 0))
 			kfree_skb(skb);
diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 206ebed..8b0c609 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -179,6 +179,7 @@ static int vhost_net_buf_peek_len(void *ptr)
 {
 	if (tun_is_xdp_buff(ptr)) {
 		struct xdp_buff *xdp = tun_ptr_to_xdp(ptr);
+
 		return xdp->data_end - xdp->data;
 	}
 
@@ -405,7 +406,7 @@ static void vhost_net_disable_vq(struct vhost_net *n,
 }
 
 static int vhost_net_enable_vq(struct vhost_net *n,
-			        struct vhost_virtqueue *vq)
+			       struct vhost_virtqueue *vq)
 {
 	struct vhost_net_virtqueue *nvq =
 		container_of(vq, struct vhost_net_virtqueue, vq);
