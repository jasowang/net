Bottom: 448ae10f6f9d3af9e92c6784852f117530e3ad8b
Top:    77bd2beb9d8e7ede1f55bebef3572781352800db
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-08-07 15:33:15 +0800



---

diff --git a/include/linux/filter.h b/include/linux/filter.h
index c73dd73..b74a448 100644
--- a/include/linux/filter.h
+++ b/include/linux/filter.h
@@ -791,6 +791,8 @@ int xdp_do_generic_redirect(struct net_device *dev, struct sk_buff *skb,
 int xdp_do_redirect(struct net_device *dev,
 		    struct xdp_buff *xdp,
 		    struct bpf_prog *prog);
+int xdp_do_rx_handler(struct net_device *dev,
+		      struct xdp_buff *xdp);
 void xdp_do_flush_map(void);
 
 void bpf_warn_invalid_xdp_action(u32 act);
diff --git a/net/core/filter.c b/net/core/filter.c
index 7509bb7..f126cad 100644
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -3312,6 +3312,27 @@ int xdp_do_redirect(struct net_device *dev, struct xdp_buff *xdp,
 }
 EXPORT_SYMBOL_GPL(xdp_do_redirect);
 
+int xdp_do_rx_handler(struct net_device *dev, struct xdp_buff *xdp)
+{
+	rx_handler_xdp_func_t *rx_handler_xdp;
+	int ret = 0;
+
+	rx_handler_xdp = rcu_dereference(dev->rx_handler_xdp);
+	if (rx_handler_xdp) {
+		switch(rx_handler_xdp(xdp)) {
+		case RX_HANDLER_CONSUMED:
+			return 0;
+		case RX_HANDLER_ANOHTER:
+			return -ENOTSUPP;
+		default:
+			return -EFAULT;
+		}
+	}
+
+	return -EINVAL;
+}
+EXPORT_SYMBOL_GPL(xdp_do_rx_handler);
+
 static int xdp_do_generic_redirect_map(struct net_device *dev,
 				       struct sk_buff *skb,
 				       struct xdp_buff *xdp,
