Bottom: fcbaa04dc5199bdd3c49eac6e08963a7b6926b0e
Top:    a4364443991aea3c80fbf73bbab710d270331c58
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-08 04:52:29 -0400

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 21910c9..689de68 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -176,6 +176,7 @@ struct tun_file {
 	struct tun_struct *detached;
 	spinlock_t rlock;
 	unsigned short head;
+	unsigned short head_shadow;
 	struct tun_desc tx_descs[TUN_RING_SIZE];
 	spinlock_t wlock;
 	unsigned short tail;
@@ -1516,6 +1517,7 @@ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 			   int noblock)
 {
 	struct sk_buff *skb;
+	unsigned short this;
 	ssize_t ret;
 
 	tun_debug(KERN_INFO, tun, "tun_do_read\n");
@@ -1526,18 +1528,22 @@ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 	if (tun->dev->reg_state != NETREG_REGISTERED)
 		return -EIO;
 
-	spin_lock(&tfile->rlock);
+//	spin_lock(&tfile->rlock);
 
 	if (tfile->head == tfile->tail) {
-		spin_unlock(&tfile->rlock);
+//		spin_unlock(&tfile->rlock);
 		return -EAGAIN;
 	}
 
-	skb = tfile->tx_descs[tfile->head].skb;
+
+	this = (atomic_inc_short(&tfile->head_shadow) - 1) & TUN_RING_MASK;
+	skb = tfile->tx_descs[this].skb;
 	smp_wmb();
+	while (unlikely(READ_ONCE(tfile->head)) != this)
+		cpu_relax();
 	tfile->head = (tfile->head + 1) & TUN_RING_MASK;
 
-	spin_unlock(&tfile->rlock);
+//	spin_unlock(&tfile->rlock);
 
 #if 0
 	/* Read frames from queue */
@@ -2393,7 +2399,7 @@ static int tun_chr_open(struct inode *inode, struct file * file)
 
 	sock_set_flag(&tfile->sk, SOCK_ZEROCOPY);
 	tfile->head = tfile->tail = 0;
-	tfile->tail_shadow = 0;
+	tfile->tail_shadow = tfile->head_shadow = 0;
 
 	spin_lock_init(&tfile->rlock);
 	spin_lock_init(&tfile->wlock);
