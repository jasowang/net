Bottom: 12f28d14dd17d7d75cb06424e8fe27bb5fb3f984
Top:    3d12b4c775d154f3958c5ecbb0a8fdc3f4362330
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-08-30 21:51:44 +0800

vhost: minor tweak

Signed-off-by: Jason Wang <jasowang@redhat.com>

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index a908095..0e6d43e 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -392,7 +392,7 @@ static long vhost_dev_alloc_iovecs(struct vhost_dev *dev)
 		vq->indirect = kmalloc(sizeof *vq->indirect * UIO_MAXIOV,
 				       GFP_KERNEL);
 		vq->log = kmalloc(sizeof *vq->log * UIO_MAXIOV, GFP_KERNEL);
-		vq->heads = kmalloc(sizeof *vq->heads * UIO_MAXIOV, GFP_KERNEL);
+		vq->heads = kzalloc(sizeof *vq->heads * UIO_MAXIOV, GFP_KERNEL);
 		if (!vq->indirect || !vq->log || !vq->heads)
 			goto err_nomem;
 	}
@@ -2485,55 +2485,53 @@ int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
 		       &vq->avail->idx);
 		return -EFAULT;
 	}
-	last_avail_idx = vq->last_avail_idx;
+	last_avail_idx = vq->last_avail_idx & (vq->num - 1);
 	vq->avail_idx = vhost16_to_cpu(vq, avail_idx);
 	total = vq->avail_idx - vq->last_avail_idx;
 	ret = total = min(total, num);
 
 	while (total) {
-		copied = vq->num - (last_avail_idx & (vq->num - 1));
-		copied = min(copied, total);
+		/* FIXME: use u16 for vq->num */
+		copied = min((u16)(vq->num - last_avail_idx), total);
 		ret2 = vhost_copy_from_user(vq, &indices[ret - total],
-			 &vq->avail->ring[last_avail_idx & (vq->num - 1)],
-					copied * sizeof *indices);
+					    &vq->avail->ring[last_avail_idx],
+					    copied * sizeof *indices);
 		if (unlikely(ret2)) {
 			vq_err(vq, "Failed to get descriptors\n");
 			return -EFAULT;
 		}
 
-		last_avail_idx += copied;
+		last_avail_idx = 0;
 		total -= copied;
 	}
 
 	if (!heads)
-		return ret;
+		goto out;
 
-	for (i = 0; i < ret; i++) {
+	for (i = 0; i < ret; i++)
 		heads[i].id = indices[i];
-		heads[i].len = 0;
-	}
 
 	total = ret;
-	last_used_idx = vq->last_used_idx;
+	last_used_idx = vq->last_used_idx & (vq->num - 1);
 	while (total) {
-		copied = vq->num - (last_used_idx & (vq->num - 1));
-		copied = min(copied, total);
+		copied = min((u16)(vq->num - last_used_idx), total);
 		ret2 = vhost_copy_to_user(vq,
-				&vq->used->ring[last_used_idx & (vq->num - 1)],
-				&heads[ret - total], copied * sizeof *used);
+					  &vq->used->ring[last_used_idx],
+					  &heads[ret - total],
+					  copied * sizeof *used);
 
 		if (unlikely(ret2)) {
 			vq_err(vq, "Failed to update used ring!\n");
 			return -EFAULT;
 		}
 
+		last_used_idx = 0;
 		total -= copied;
-		last_used_idx += copied;
 	}
 
+out:
 	/* Only get avail ring entries after they have been exposed by guest. */
 	smp_rmb();
-
 	return ret;
 }
 EXPORT_SYMBOL(vhost_prefetch_desc_indices);
