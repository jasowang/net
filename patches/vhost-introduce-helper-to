Bottom: c1ada38a3a7858a58cafdcc2e68b25dfd1a4b3da
Top:    8da307aebb8d386f5b764622a5d85fc9f248fa62
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-22 18:42:33 +0800

vhost: introduce helper to prefetch desc index

This patch introduces vhost_prefetch_desc_indices() which could batch
fetching descriptor indices and updating used ring. copy_to_user was
used in order to benefit from modern cpus that support fast string
copy. Batched vring processing will be the first user.

Signed-off-by: Jason Wang <jasowang@redhat.com>

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 33ac2b1..893cad7 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2414,6 +2414,40 @@ struct vhost_msg_node *vhost_dequeue_msg(struct vhost_dev *dev,
 }
 EXPORT_SYMBOL_GPL(vhost_dequeue_msg);
 
+static int vhost_read_desc_indices(struct vhost_virtqueue *vq,
+				   struct vring_used_elem *heads,
+				   u16 num)
+{
+	int ret, ret2;
+	u16 last_avail_idx, last_used_idx, total, copied;
+	__virtio16 avail_idx;
+	struct vring_used_elem __user *used;
+	int i;
+
+	if (unlikely(vhost_get_avail(vq, avail_idx, &vq->avail->idx))) {
+		vq_err(vq, "Failed to access avail idx at %p\n",
+		       &vq->avail->idx);
+		return -EFAULT;
+	}
+	last_avail_idx = vq->last_avail_idx & (vq->num - 1);
+	vq->avail_idx = vhost16_to_cpu(vq, avail_idx);
+	total = vq->avail_idx - vq->last_avail_idx;
+	ret = total = min(total, num);
+
+	for (i = 0; i < ret; i++) {
+		ret2 = vhost_get_avail(vq, heads[i].id,
+				      &vq->avail->ring[last_avail_idx]);
+		if (unlikely(ret2)) {
+			vq_err(vq, "Failed to get descriptors\n");
+			return -EFAULT;
+		}
+		last_avail_idx = (last_avail_idx + 1) & (vq->num - 1);
+	}
+
+	/* Only get avail ring entries after they have been exposed by guest. */
+	smp_rmb();
+	return ret;
+}
 
 static int __init vhost_init(void)
 {
