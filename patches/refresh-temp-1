Bottom: bfc8225e89f28978e1c31e5ed685583bd7da4dc5
Top:    b0ac998bf0ecd989de7b6d6f1ee3392f78c8f7f2
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-05-26 09:29:20 +0800

Refresh of refresh-temp-0

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index b4a228c..986edee 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -1893,7 +1893,7 @@ static int tun_set_iff(struct net *net, struct file *file, struct ifreq *ifr)
 
 		tun = netdev_priv(dev);
 		tun->dev = dev;
-		tun->flags = flags | IFF_TX_RING;
+		tun->flags = flags | IFF_TX_ARRAY;
 		tun->txflt.count = 0;
 		tun->vnet_hdr_sz = sizeof(struct virtio_net_hdr);
 
diff --git a/include/linux/skb_array.h b/include/linux/skb_array.h
index 1ca8dd3..a3d13ad 100644
--- a/include/linux/skb_array.h
+++ b/include/linux/skb_array.h
@@ -104,6 +104,19 @@ static inline struct sk_buff *skb_array_consume_bh(struct skb_array *a)
 	return skb;
 }
 
+static inline struct sk_buff *skb_array_consume(struct skb_array *a)
+{
+	struct sk_buff *skb;
+
+	spin_lock(&a->consumer_lock);
+	skb = __skb_array_peek(a);
+	if (skb)
+		__skb_array_consume(a);
+	spin_unlock(&a->consumer_lock);
+
+	return skb;
+}
+
 static inline int skb_array_peek_len(struct skb_array *a)
 {
 	struct sk_buff *skb;
