Bottom: 8c94b1c04c8e293c68fcdbc237eaa0b1e281d7ed
Top:    074126dd1a4323897b2685959332b004ba48ebf6
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-04 09:56:21 +0800

Refresh of tun-add-missing-xdp-flush

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 2c89efe..e3e7920 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -180,6 +180,7 @@ struct tun_file {
 	struct list_head next;
 	struct tun_struct *detached;
 	struct ptr_ring tx_ring;
+	bool xdp_flush_needed;
 };
 
 struct tun_flow_entry {
@@ -1519,6 +1520,7 @@ static struct sk_buff *tun_build_skb(struct tun_struct *tun,
 			err = xdp_do_redirect(tun->dev, &xdp, xdp_prog);
 			if (err)
 				goto err_redirect;
+			tfile->xdp_flush_needed = true;
 			rcu_read_unlock();
 			return NULL;
 		case XDP_TX:
@@ -1837,6 +1839,11 @@ static ssize_t tun_chr_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	result = tun_get_user(tun, tfile, NULL, from,
 			      file->f_flags & O_NONBLOCK, false);
 
+	if (tfile->xdp_flush_needed) {
+		tfile->xdp_flush_needed = false;
+		xdp_do_flush_map();
+	}
+
 	tun_put(tun);
 	return result;
 }
@@ -2134,6 +2141,12 @@ static int tun_sendmsg(struct socket *sock, struct msghdr *m, size_t total_len)
 	ret = tun_get_user(tun, tfile, m->msg_control, &m->msg_iter,
 			   m->msg_flags & MSG_DONTWAIT,
 			   m->msg_flags & MSG_MORE);
+
+	if (tfile->xdp_flush_needed && !(m->msg_flags & MSG_MORE)) {
+		tfile->xdp_flush_needed = false;
+		xdp_do_flush_map();
+	}
+
 	tun_put(tun);
 	return ret;
 }
@@ -2946,6 +2959,8 @@ static int tun_chr_open(struct inode *inode, struct file * file)
 
 	sock_set_flag(&tfile->sk, SOCK_ZEROCOPY);
 
+	tfile->xdp_flush_needed = false;
+
 	return 0;
 }
