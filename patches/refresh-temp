Bottom: 48aa42f6ef11dd6a4790b9025a9d58b751367964
Top:    c379f670a3ea943e8b7352245547f92a4986bad4
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-08-31 15:34:59 +0800

Refresh of vhost-introduce-helper-to

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index b7dfab0..cdf0121 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2437,10 +2437,9 @@ struct vhost_msg_node *vhost_dequeue_msg(struct vhost_dev *dev,
 }
 EXPORT_SYMBOL_GPL(vhost_dequeue_msg);
 
-/* Prefetch descriptor indices */
 int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
 				struct vring_used_elem *heads,
-				__virtio16 *indices, u16 num)
+				u16 num)
 {
 	int ret, ret2;
 	u16 last_avail_idx, last_used_idx, total, copied;
@@ -2453,55 +2452,40 @@ int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
 		       &vq->avail->idx);
 		return -EFAULT;
 	}
-	last_avail_idx = vq->last_avail_idx;
+	last_avail_idx = vq->last_avail_idx & (vq->num - 1);
 	vq->avail_idx = vhost16_to_cpu(vq, avail_idx);
 	total = vq->avail_idx - vq->last_avail_idx;
 	ret = total = min(total, num);
 
-	while (total) {
-		copied = vq->num - (last_avail_idx & (vq->num - 1));
-		copied = min(copied, total);
-		ret2 = vhost_copy_from_user(vq, &indices[ret - total],
-			 &vq->avail->ring[last_avail_idx & (vq->num - 1)],
-					copied * sizeof *indices);
+	for (i = 0; i < ret; i++) {
+		ret2 = vhost_get_avail(vq, heads[i].id,
+				      &vq->avail->ring[last_avail_idx]);
 		if (unlikely(ret2)) {
 			vq_err(vq, "Failed to get descriptors\n");
 			return -EFAULT;
 		}
-
-		last_avail_idx += copied;
-		total -= copied;
-	}
-
-	if (!heads)
-		return ret;
-
-	for (i = 0; i < ret; i++) {
-		heads[i].id = indices[i];
-		heads[i].len = 0;
+		last_avail_idx = (last_avail_idx + 1) & (vq->num - 1);
 	}
 
-	total = ret;
-	last_used_idx = vq->last_used_idx;
+	last_used_idx = vq->last_used_idx & (vq->num - 1);
 	while (total) {
-		copied = vq->num - (last_used_idx & (vq->num - 1));
-		copied = min(copied, total);
+		copied = min((u16)(vq->num - last_used_idx), total);
 		ret2 = vhost_copy_to_user(vq,
-				&vq->used->ring[last_used_idx & (vq->num - 1)],
-				&heads[ret - total], copied * sizeof *used);
+					  &vq->used->ring[last_used_idx],
+					  &heads[ret - total],
+					  copied * sizeof *used);
 
 		if (unlikely(ret2)) {
 			vq_err(vq, "Failed to update used ring!\n");
 			return -EFAULT;
 		}
 
+		last_used_idx = 0;
 		total -= copied;
-		last_used_idx += copied;
 	}
 
 	/* Only get avail ring entries after they have been exposed by guest. */
 	smp_rmb();
-
 	return ret;
 }
 EXPORT_SYMBOL(vhost_prefetch_desc_indices);
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index 0d8abd1..ec21473 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -230,7 +230,7 @@ ssize_t vhost_chr_write_iter(struct vhost_dev *dev,
 int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled);
 int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
                                 struct vring_used_elem *heads,
-				__virtio16 *indices, u16 num);
+				u16 num);
 
 #define vq_err(vq, fmt, ...) do {                                  \
 		pr_debug(pr_fmt(fmt), ##__VA_ARGS__);       \
