Bottom: cda92389e08cacd0f41e40348c4f6f23d3bb9bce
Top:    c25d1aff0b6a64624e1f9a72c6e4354f103ff103
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-07-19 14:02:27 +0800

Refresh of tuntap-simplify-error-handling

---

diff --git a/drivers/net/tun.c.rej b/drivers/net/tun.c.rej
deleted file mode 100644
index f19df4f..0000000
--- a/drivers/net/tun.c.rej
+++ /dev/null
@@ -1,64 +0,0 @@
---- drivers/net/tun.c
-+++ drivers/net/tun.c
-@@ -1659,24 +1662,16 @@ static struct sk_buff *tun_build_skb(struct tun_struct *tun,
- 
- 		switch (act) {
- 		case XDP_REDIRECT:
--			get_page(alloc_frag->page);
--			alloc_frag->offset += buflen;
- 			err = xdp_do_redirect(tun->dev, &xdp, xdp_prog);
- 			xdp_do_flush_map();
- 			if (err)
--				goto err_redirect;
--			rcu_read_unlock();
--			preempt_enable();
--			return NULL;
-+				goto err_xdp;
-+			goto out;
- 		case XDP_TX:
--			get_page(alloc_frag->page);
--			alloc_frag->offset += buflen;
- 			if (tun_xdp_xmit(tun->dev, &xdp))
--				goto err_redirect;
-+				goto err_xdp;
- 			tun_xdp_flush(tun->dev);
--			rcu_read_unlock();
--			preempt_enable();
--			return NULL;
-+			goto out;
- 		case XDP_PASS:
- 			delta = orig_data - xdp.data;
- 			break;
-@@ -1695,25 +1690,23 @@ static struct sk_buff *tun_build_skb(struct tun_struct *tun,
- 
- 	skb = build_skb(buf, buflen);
- 	if (!skb) {
--		rcu_read_unlock();
--		preempt_enable();
--		return ERR_PTR(-ENOMEM);
-+		skb = ERR_PTR(-ENOMEM);
-+		goto out;
- 	}
- 
- 	skb_reserve(skb, pad - delta);
- 	skb_put(skb, len + delta);
--	get_page(alloc_frag->page);
--	alloc_frag->offset += buflen;
- 
- 	return skb;
- 
--err_redirect:
--	put_page(alloc_frag->page);
- err_xdp:
-+	alloc_frag->offset -= buflen;
-+	put_page(alloc_frag->page);
-+	this_cpu_inc(tun->pcpu_stats->rx_dropped);
-+out:
- 	rcu_read_unlock();
- 	preempt_enable();
--	this_cpu_inc(tun->pcpu_stats->rx_dropped);
--	return NULL;
-+	return skb;
- }
- 
- /* Get packet from user space buffer */
