Bottom: 29211ad99c44ccf88d4377779d0731dc37597dfc
Top:    370d2e9d02288bf5f125beaf02726dc246efc1c4
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-01-11 13:58:25 +0800

Refresh of vhost_net-batch-tx-descriptor-0

---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index b7913c9..b516445 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -346,7 +346,7 @@ static struct vhost_desc *vhost_net_tx_get_vq_desc(struct vhost_net *net,
 		desc = vhost_get_vq_desc_batched(vq, NULL);
 	}
 
-	if (desc && desc->head && desc->head != vq->num) {
+	if (desc && desc->head >= 0 && desc->head != vq->num) {
 		*out_num = desc->out_num;
 		*in_num = desc->in_num;
 	} else {
@@ -407,8 +407,10 @@ static void handle_tx(struct vhost_net *net)
 
 		desc = vhost_net_tx_get_vq_desc(net, vq, &out, &in);
 		/* TODO: for safe! */
-		if (desc == NULL)
+		if (desc == NULL) {
+			printk("NULL!\n");
 			break;
+		}
 		head = desc->head;
 		/* On error, stop handling until the next kick. */
 		if (unlikely(head < 0))
diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 15e804b..5849b37 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2054,6 +2054,7 @@ int vhost_get_vq_desc(struct vhost_virtqueue *vq,
 	/* Assume notifications from guest are disabled at this point,
 	 * if they aren't we would need to update avail_event index. */
 	BUG_ON(!(vq->used_flags & VRING_USED_F_NO_NOTIFY));
+//	printk("vq %p head %d\n", vq, head);
 	return head;
 }
 EXPORT_SYMBOL_GPL(vhost_get_vq_desc);
@@ -2067,7 +2068,12 @@ struct vhost_desc *vhost_get_vq_desc_batched(struct vhost_virtqueue *vq,
 again:
 	if (vq->max_desc) {
 		ret = &vq->descs[vq->current_desc];
-
+#if 0
+		printk("vq %p curr %d max %d\n", vq,
+			vq->current_desc, vq->max_desc);
+		printk("head %d in %d out %d offset %d\n",
+			ret->head, ret->in_num, ret->out_num, ret->offset);
+#endif
 		if (vq->current_desc + 1 == vq->max_desc)
 			vq->current_desc = vq->max_desc = 0;
 		else
@@ -2083,9 +2089,12 @@ struct vhost_desc *vhost_get_vq_desc_batched(struct vhost_virtqueue *vq,
 		desc->head = vhost_get_vq_desc(vq, vq->iov + offset, UIO_MAXIOV,
 					       &desc->out_num, &desc->in_num,
 					       log, &desc->log_num);
-
+#if 0
+		printk("vq %p desc->head %d max %d\n", vq, desc->head,
+			vq->max_desc);
+#endif
 		++vq->max_desc;
-		if (desc->head || desc->head != vq->num) {
+		if (desc->head >= 0 && desc->head != vq->num) {
 			desc->offset = offset;
 			offset += desc->out_num + desc->in_num;
 		} else
