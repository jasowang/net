Bottom: fbc46518d9eb9964c260670b2d6cfc024032ff81
Top:    1836a29910c30d3ff6e0f6c4f08f1c0ebd17f0c0
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-07-06 16:04:10 +0800

Refresh of bpf-verifier-debug

---

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 9e2bf83..19a9711 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -5853,6 +5853,8 @@ static void free_states(struct bpf_verifier_env *env)
 	kfree(env->explored_states);
 }
 
+#define DBG() printk("file %s line %d\n", __FILE__, __LINE__)
+
 int bpf_check(struct bpf_prog **prog, union bpf_attr *attr)
 {
 	struct bpf_verifier_env *env;
@@ -5860,8 +5862,10 @@ int bpf_check(struct bpf_prog **prog, union bpf_attr *attr)
 	int ret = -EINVAL;
 
 	/* no program is valid */
-	if (ARRAY_SIZE(bpf_verifier_ops) == 0)
+	if (ARRAY_SIZE(bpf_verifier_ops) == 0) {
+		DBG();
 		return -EINVAL;
+	}
 
 	/* 'struct bpf_verifier_env' can be global, but since it's not small,
 	 * allocate/free it every time bpf_check() is called
