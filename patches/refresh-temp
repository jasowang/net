Bottom: 3af28bfdb4841edb0610eea99f399cf8f0001071
Top:    af54edf7ca98c985b077fd762d5d03a78e95bbbd
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-03-22 16:23:38 +0800

Refresh of vhost_net-prefetch-desc

---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 3a15db6..d295367 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -711,7 +711,7 @@ static int rx_recvmsg(struct vhost_net_virtqueue *nvq, int in,
 		iov_iter_advance(&msg.msg_iter, vhost_hlen);
 	}
 	err = sock->ops->recvmsg(sock, &msg,
-				sock_len, MSG_DONTWAIT | MSG_TRUNC);
+				 sock_len, MSG_DONTWAIT | MSG_TRUNC);
 	/* Userspace might have consumed the packet meanwhile:
 	 * it's not supposed to do this usually, but might be hard
 	 * to prevent. Discard data we got (if any) and keep going. */
@@ -779,11 +779,15 @@ static void handle_rx_batched(struct vhost_net *net, struct vhost_log *vq_log)
 						  ARRAY_SIZE(vq->iov),
 						  &out, &in, vq_log,
 						  &log, indices[i]);
-			if (unlikely(head <= 0 || head == vq->num))
+			if (unlikely(head <= 0 || head == vq->num)) {
+				printk("head error!\n");
 				return;
+			}
 			if (rx_recvmsg(nvq, in, nvq->rxq[nvq->rh++],
-				       sock_len, vq_log, log))
+				       sock_len, vq_log, log)) {
+				printk("recvmsg error!\n");
 				return;
+			}
 
 			vhost_update_used_idx(vq, 1);
 			vhost_signal(&net->dev, vq);
