Bottom: e71946920bffb5d4e94ed4cc9e39d659c4d1dffc
Top:    a019c8d4e13afeb68aa3a22b095b9d127ba4e7d6
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-11-21 17:04:45 +0800

Refresh of tuntap-rx-batching

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 95aa932..d8f2912 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -1187,7 +1187,7 @@ static struct sk_buff *tun_alloc_skb(struct tun_file *tfile,
 /* Get packet from user space buffer */
 static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 			    void *msg_control, struct iov_iter *from,
-			    int noblock, bool more)
+			    int noblock)
 {
 	struct tun_pi pi = { 0, cpu_to_be16(ETH_P_IP) };
 	struct sk_buff *skb;
@@ -1340,11 +1340,9 @@ static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 	}
 	skb_queue_tail(&tfile->socket.sk->sk_write_queue, skb);
 
-	if (!more) {
-		local_bh_disable();
-		napi_schedule(&tfile->napi);
-		local_bh_enable();
-	}
+	local_bh_disable();
+	napi_schedule(&tfile->napi);
+	local_bh_enable();
 
 	stats = get_cpu_ptr(tun->pcpu_stats);
 	u64_stats_update_begin(&stats->syncp);
@@ -1368,7 +1366,7 @@ static ssize_t tun_chr_write_iter(struct kiocb *iocb, struct iov_iter *from)
 		return -EBADFD;
 
 	result = tun_get_user(tun, tfile, NULL, from,
-			      file->f_flags & O_NONBLOCK, false);
+			      file->f_flags & O_NONBLOCK);
 
 	tun_put(tun);
 	return result;
@@ -1628,8 +1626,7 @@ static int tun_sendmsg(struct socket *sock, struct msghdr *m, size_t total_len)
 		return -EBADFD;
 
 	ret = tun_get_user(tun, tfile, m->msg_control, &m->msg_iter,
-			   m->msg_flags & MSG_DONTWAIT,
-			   m->msg_flags & MSG_MORE);
+			   m->msg_flags & MSG_DONTWAIT)
 	tun_put(tun);
 	return ret;
 }
