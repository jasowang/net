Bottom: 370d2e9d02288bf5f125beaf02726dc246efc1c4
Top:    ad2628c44c1e1bee4af295cbda69bca2ee3c1fc6
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-01-11 15:31:14 +0800

Refresh of vhost_net-batch-tx-descriptor-0

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 5849b37..5e1373f 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2068,12 +2068,6 @@ struct vhost_desc *vhost_get_vq_desc_batched(struct vhost_virtqueue *vq,
 again:
 	if (vq->max_desc) {
 		ret = &vq->descs[vq->current_desc];
-#if 0
-		printk("vq %p curr %d max %d\n", vq,
-			vq->current_desc, vq->max_desc);
-		printk("head %d in %d out %d offset %d\n",
-			ret->head, ret->in_num, ret->out_num, ret->offset);
-#endif
 		if (vq->current_desc + 1 == vq->max_desc)
 			vq->current_desc = vq->max_desc = 0;
 		else
@@ -2089,10 +2083,6 @@ struct vhost_desc *vhost_get_vq_desc_batched(struct vhost_virtqueue *vq,
 		desc->head = vhost_get_vq_desc(vq, vq->iov + offset, UIO_MAXIOV,
 					       &desc->out_num, &desc->in_num,
 					       log, &desc->log_num);
-#if 0
-		printk("vq %p desc->head %d max %d\n", vq, desc->head,
-			vq->max_desc);
-#endif
 		++vq->max_desc;
 		if (desc->head >= 0 && desc->head != vq->num) {
 			desc->offset = offset;
