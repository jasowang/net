Bottom: 3ec7be255291ec746269f7e0149c6c466f03ef3a
Top:    384076094f6456d81e130e92595f68f556e4a0c3
Author: Jason Wang <jasowang@redhat.com>
Date:   2015-04-20 18:06:08 +0800

Refresh of cdebug

---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 0e5768e..ddf0136 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -257,9 +257,9 @@ static int vhost_net_check_coalesce_and_signal(struct vhost_dev *dev,
 		now = ktime_get();
 		left = nvq->coalesce_usecs -
 		       ktime_to_us(ktime_sub(now, nvq->last_signal));
-		if (left <= 0) {
-			vhost_signal(dev, vq);
-			nvq->last_signal = now;
+		if (left <= 0 && vhost_signal(dev, vq)) {
+			printk("us!\n");
+			nvq->last_signal = ktime_get();
 			nvq->coalesced = 0;
 		}
 	}
@@ -285,8 +285,16 @@ static bool vhost_net_add_used_and_signal_n(struct vhost_dev *dev,
 		if (((nvq->coalesced >= nvq->max_coalesced_frames) ||
 		     (ktime_to_us(ktime_sub(now, nvq->last_signal)) >=
 		      nvq->coalesce_usecs)) && vhost_signal(dev, vq)) {
+			if (nvq->coalesced >=
+				nvq->max_coalesced_frames)
+				printk("exceed max count!\n");
+			else
+				printk("left %lu us %lu count %d\n",
+					ktime_to_us(ktime_sub(now, nvq->last_signal)),
+					nvq->coalesce_usecs,
+					nvq->coalesced);
 			nvq->coalesced = 0;
-			nvq->last_signal = now;
+			nvq->last_signal = ktime_get();
 			ret = true;
 		}
 	} else {
@@ -374,6 +382,7 @@ static void handle_tx(struct vhost_net *net)
 	struct vhost_net_ubuf_ref *uninitialized_var(ubufs);
 	bool zcopy, zcopy_used;
 	int left;
+	ktime_t s1, s2;
 
 	mutex_lock(&vq->mutex);
 	sock = vq->private_data;
@@ -456,8 +465,13 @@ static void handle_tx(struct vhost_net *net)
 			msg.msg_control = NULL;
 			ubufs = NULL;
 		}
+
+		s1 = ktime_get();
 		/* TODO: Check specific error and bomb out unless ENOBUFS? */
 		err = sock->ops->sendmsg(sock, &msg, len);
+		s2 = ktime_get();
+
+		printk("copy time %u\n", ktime_to_us(ktime_sub(s2, s1)));
 		if (unlikely(err < 0)) {
 			if (zcopy_used) {
 				vhost_net_ubuf_put(ubufs);
@@ -768,7 +782,10 @@ static enum hrtimer_restart vhost_net_timer_handler(struct hrtimer *timer)
 						c_timer);
 	struct vhost_virtqueue *vq = &nvq->vq;
 
-	vhost_poll_queue(&vq->poll);
+	if (nvq->coalesced)
+		vhost_poll_queue(&vq->poll);
+	else
+		printk("fake!\n");
 
 	return HRTIMER_NORESTART;
 }
@@ -1191,6 +1208,9 @@ static long vhost_net_set_vring_coalesce(struct vhost_dev *d, void __user *argp)
 	nvq->max_coalesced_frames = c.max_coalesced_frames;
 	mutex_unlock(&vq->mutex);
 
+	printk("c %d u %d\n", nvq->max_coalesced_frames,
+		nvq->coalesce_usecs);
+
 	return 0;
 }
