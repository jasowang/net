Bottom: fef00e31b97d42ea134ee3706d96d7738ebbcc5a
Top:    01b02f57f0129c9b1ddecf761795858e57bf4a93
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-11-23 11:20:05 +0800

Refresh of add-a-vq-meta-data-iotlb

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index c845502..af90da1 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -726,11 +726,7 @@ static void __user *vhost_vq_meta_fetch(struct vhost_virtqueue *vq,
 	if (!node)
 		return NULL;
 
-	BUG_ON(addr < node->start || (u64)addr >= node->start + node->size);
-
-	if (!(node->perm & access) &&
-	    (u64)addr + size >= node->start + node->size)
-		return NULL;
+	BUG_ON(addr < node->start || addr + size >= node->start + node->size);
 
 	return (void *)(node->userspace_addr + (u64)addr - node->start);
 }
@@ -777,7 +773,6 @@ static int vhost_copy_to_user(struct vhost_virtqueue *vq, void *to,
 		 * could be access through iotlb. So -EAGAIN should
 		 * not happen in this case.
 		 */
-		/* TODO: more fast path */
 		struct iov_iter t;
 		void __user *uaddr = vhost_vq_meta_fetch(vq,
 				     (u64)(uintptr_t)to, size, type);
@@ -812,7 +807,6 @@ static int vhost_copy_from_user(struct vhost_virtqueue *vq, void *to,
 		 * could be access through iotlb. So -EAGAIN should
 		 * not happen in this case.
 		 */
-		/* TODO: more fast path */
 		void __user *uaddr = vhost_vq_meta_fetch(vq,
 				     (u64)(uintptr_t)from, size, type);
 		struct iov_iter f;
@@ -1172,8 +1166,8 @@ static int vq_access_ok(struct vhost_virtqueue *vq, unsigned int num,
 }
 
 static void vhost_vq_meta_update(struct vhost_virtqueue *vq,
-				  const struct vhost_umem_node *node,
-				  int type)
+				 const struct vhost_umem_node *node,
+				 int type)
 {
 	switch (type) {
 	case VHOST_ADDR_DESC:
