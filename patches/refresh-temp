Bottom: ae736c374725c2c2ef1ee2e01ba44a1dd7026a30
Top:    14b67c1075e914ae2beec65071829b54e0fb3090
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-06-12 10:28:56 +0800

Refresh of vhost-introduce-new-ioctls-to

---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index e7cf7d2..16c1d1e 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -78,6 +78,11 @@ enum {
 };
 
 enum {
+	VHOST_NET_BACKEND_FEATURES = (1ULL << VHOST_BACKEND_F_LOG_ALL |
+				      1ULL << VHOST_BACKEND_F_VIRTIO_NET_HDR)
+};
+
+enum {
 	VHOST_NET_VQ_RX = 0,
 	VHOST_NET_VQ_TX = 1,
 	VHOST_NET_VQ_MAX = 2,
@@ -1262,6 +1267,19 @@ static long vhost_net_reset_owner(struct vhost_net *n)
 	return err;
 }
 
+static int vhost_net_set_backend_features(struct vhost_net *n, u64 features)
+{
+	switch (features) {
+	case VHOST_BACKEND_F_LOG_ALL:
+	case VHOST_BACKEND_F_VIRTIO_NET_HDR:
+		break;
+	default:
+		return -EFAULT;
+	}
+
+	if ((features
+}
+
 static int vhost_net_set_features(struct vhost_net *n, u64 features)
 {
 	size_t vhost_hlen, sock_hlen, hdr_len;
@@ -1352,6 +1370,11 @@ static long vhost_net_ioctl(struct file *f, unsigned int ioctl,
 		if (features & ~VHOST_NET_FEATURES)
 			return -EOPNOTSUPP;
 		return vhost_net_set_features(n, features);
+	case VHOST_GET_BACKEND_FEATURES:
+		features = VHOST_NET_BACKEND_FEATURES;
+		if (copy_to_user(featurep, &features, sizeof features))
+			return -EFAULT;
+		return 0;
 	case VHOST_RESET_OWNER:
 		return vhost_net_reset_owner(n);
 	case VHOST_SET_OWNER:
diff --git a/include/uapi/linux/vhost.h b/include/uapi/linux/vhost.h
index c51f8e5..1286977 100644
--- a/include/uapi/linux/vhost.h
+++ b/include/uapi/linux/vhost.h
@@ -160,6 +160,16 @@ struct vhost_memory {
 #define VHOST_GET_VRING_BUSYLOOP_TIMEOUT _IOW(VHOST_VIRTIO, 0x24,	\
 					 struct vhost_vring_state)
 
+/* Set or get vhost backend capability */
+
+/* Log all write descriptors. Can be changed while device is active. */
+#define VHOST_BACKEND_F_LOG_ALL 1
+/* vhost-net should add virtio_net_hdr for RX, and strip for TX packets. */
+#define VHOST_BACKEND_F_VIRTIO_NET_HDR 2
+
+#define VHOST_SET_BACKEND_FEATURES _IOW(VHOST_VIRTIO, 0x25, __u64)
+#define VHOST_GET_BACKEND_FEATURES _IOW(VHOST_VIRTIO, 0x26, __u64)
+
 /* VHOST_NET specific defines */
 
 /* Attach virtio net ring to a raw socket, or tap device.
