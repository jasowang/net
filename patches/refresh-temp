Bottom: 265725fc34ac493b833dea2e3e9c2a642bb10b1c
Top:    c0f7ba20f514b5e86a37fe0455707ca40b3fd0f7
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-07-26 20:41:48 +0800

Refresh of tun-use-build_skb-for-small

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 5652bf3..c8e8a32 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -1195,6 +1195,28 @@ static void tun_rx_batched(struct tun_struct *tun, struct tun_file *tfile,
 	}
 }
 
+static bool tun_can_build_skb(struct tun_struct *tun, struct tun_file *tfile,
+			      int len, int noblock, bool zerocopy)
+{
+	if ((tun->flags & TUN_TYPE_MASK) != IFF_TAP)
+		return false;
+
+	if (tfile->socket.sk->sk_sndbuf != INT_MAX)
+		return false;
+
+	if (!noblock)
+		return false;
+
+	if (zerocopy)
+		return false;
+
+	if (SKB_DATA_ALIGN(len + TUN_RX_PAD) +
+	    SKB_DATA_ALIGN(sizeof(struct skb_shared_info)) > PAGE_SIZE)
+		return false;
+
+	return true;
+}
+
 static struct sk_buff *tun_build_skb(struct tun_file *tfile,
 				     struct iov_iter *from,
 				     int len)
@@ -1301,9 +1323,7 @@ static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 			zerocopy = true;
 	}
 
-	/* FIXME: check DONTWAIT and INT_MAX */
-	if (SKB_DATA_ALIGN(len + TUN_RX_PAD) +
-	    SKB_DATA_ALIGN(sizeof(struct skb_shared_info)) < PAGE_SIZE) {
+	if (tun_can_build_skb(tun, tfile, len, noblock, zerocopy)) {
 		skb = tun_build_skb(tfile, from, len);
 		if (IS_ERR(skb)) {
 			this_cpu_inc(tun->pcpu_stats->rx_dropped);
