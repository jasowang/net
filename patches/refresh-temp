Bottom: cc539af963ed2680209dbe85a5404ef2a2fa6e03
Top:    8bbfd91bac2c1b1ab10dab89b91b51b1a1ba3848
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-11-14 17:18:41 +0800

Refresh of tuntap-ndo_xdp_xmit-support

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 9c30938c..9e34833 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -233,6 +233,24 @@ struct tun_struct {
 	struct bpf_prog __rcu *xdp_prog;
 };
 
+bool tun_is_xdp_buff(void *ptr)
+{
+	return (unsigned long)ptr & TUN_XDP_FLAG;
+}
+EXPORT_SYMBOL(tun_is_xdp_buff);
+
+void *tun_xdp_to_ptr(void *ptr)
+{
+	return (void *)((unsigned long)ptr | TUN_XDP_FLAG);
+}
+EXPORT_SYMBOL(tun_xdp_to_ptr);
+
+void *tun_ptr_to_xdp(void *ptr)
+{
+	return (void *)((unsigned long)ptr & ~TUN_XDP_FLAG);
+}
+EXPORT_SYMBOL(tun_ptr_to_xdp);
+
 static int tun_napi_receive(struct napi_struct *napi, int budget)
 {
 	struct tun_file *tfile = container_of(napi, struct tun_file, napi);
@@ -1974,8 +1992,8 @@ static ssize_t tun_put_user(struct tun_struct *tun,
 	return total;
 }
 
-static struct void *tun_ring_recv(struct tun_file *tfile, int noblock,
-				  int *err)
+static void *tun_ring_recv(struct tun_file *tfile, int noblock,
+			   int *err)
 {
 	DECLARE_WAITQUEUE(wait, current);
 	void *ptr = NULL;
@@ -2030,7 +2048,7 @@ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 
 	if (!ptr) {
 		/* Read frames from ring */
-		ptr = tun_ring_recv(tfile, noblok, &err);
+		ptr = tun_ring_recv(tfile, noblock, &err);
 		if (!ptr)
 			return err;
 	}
@@ -2040,7 +2058,8 @@ static ssize_t tun_do_read(struct tun_struct *tun, struct tun_file *tfile,
 		ret = tun_put_user_xdp(tun, tfile, xdp, to);
 		page_frag_free(xdp->data);
 	} else {
-		ret = tun_put_user(tun, tfile, ptr, to);
+		struct sk_buff *skb = ptr;
+		ret = tun_put_user(tun, tfile, skb, to);
 		if (unlikely(ret < 0))
 			kfree_skb(skb);
 		else
diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 6b9140a..b15c660 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -177,8 +177,8 @@ static void vhost_net_buf_unproduce(struct vhost_net_virtqueue *nvq)
 
 static int vhost_net_buf_peek_len(void *ptr)
 {
-	if (ptr & TUN_XDP_FLAG) {
-		struct xdp_buff *xdp = ptr & ~TUN_XDP_FLAG;
+	if (tun_is_xdp_buff(ptr)) {
+		struct xdp_buff *xdp = tun_ptr_to_xdp(ptr);
 		return xdp->data_end - xdp->data;
 	}
 
diff --git a/include/linux/if_tun.h b/include/linux/if_tun.h
index 54b766d..31ce3b0 100644
--- a/include/linux/if_tun.h
+++ b/include/linux/if_tun.h
@@ -19,24 +19,13 @@
 
 #define TUN_XDP_FLAG 0x1ULL
 
-bool tun_is_xdp_buff(void *ptr)
-{
-	return (unsigned long)ptr & TUN_XDP_FLAG;
-}
-
-void *tun_xdp_to_ptr(void *ptr)
-{
-	return (void *)((unsigned long)ptr | TUN_XDP_FLAG);
-}
-
-void *tun_ptr_to_xdp(void *ptr)
-{
-	return (void *)((unsigned long)ptr & ~TUN_XDP_FLAG);
-}
-
 #if defined(CONFIG_TUN) || defined(CONFIG_TUN_MODULE)
 struct socket *tun_get_socket(struct file *);
 struct ptr_ring *tun_get_tx_ring(struct file *file);
+bool tun_is_xdp_buff(void *ptr);
+void *tun_xdp_to_ptr(void *ptr);
+void *tun_ptr_to_xdp(void *ptr);
+
 #else
 #include <linux/err.h>
 #include <linux/errno.h>
