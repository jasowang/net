Bottom: 8577185a6c5054004977d6b3922e1e231c0406bf
Top:    fabeb01435a5919491f7d1b327ea67c5a2e1111b
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-07-15 13:50:58 +0800

Refresh of vhost-correctly-init-device

---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index 3b03ceb..60c0df4 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -1108,10 +1108,10 @@ static int vhost_net_set_features(struct vhost_net *n, u64 features)
 		mutex_unlock(&n->dev.mutex);
 		return -EFAULT;
 	}
-	if ((features & (1ULL << VHOST_F_DEVICE_IOTLB))) {
-		if (vhost_init_device_iotlb(&n->dev, true))
-			return -EFAULT;
-	}
+
+	if (vhost_init_device_iotlb(&n->dev,
+				    features & (1ULL << VHOST_F_DEVICE_IOTLB)))
+		return -EFAULT;
 
 	for (i = 0; i < VHOST_NET_VQ_MAX; ++i) {
 		mutex_lock(&n->vqs[i].vq.mutex);
diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 711d6e2..51e9998 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -1491,12 +1491,14 @@ EXPORT_SYMBOL_GPL(vhost_vring_ioctl);
 
 int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled)
 {
-	struct vhost_umem *niotlb, *oiotlb;
+	struct vhost_umem *niotlb = NULL, *oiotlb;
 	int i;
 
-	niotlb = vhost_umem_alloc();
-	if (!niotlb)
-		return -ENOMEM;
+	if (enabled) {
+		niotlb = vhost_umem_alloc();
+		if (!niotlb)
+			return -ENOMEM;
+	}
 
 	oiotlb = d->iotlb;
 	d->iotlb = niotlb;
