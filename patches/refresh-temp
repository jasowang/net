Bottom: 56b16b18d5c4a1b7771fe95098a82c5ab5be46ac
Top:    dd80c2292c5902f6e737b3eb4475c6f0d9b84eb1
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-07-16 17:10:41 +0800

Refresh of debug-map

---

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index ae508e3..5ad4a14 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -2447,8 +2447,7 @@ static struct virtnet_bpf_map *virtnet_get_bpf_map(struct virtnet_info *vi,
 	struct virtnet_bpf_map *virtnet_map;
 
 	list_for_each_entry(virtnet_map, &vi->map_list, l) {
-		if (map == &virtnet_map->offmap->map)
-			return virtnet_map;
+		return virtnet_map;
 	}
 
 	return NULL;
@@ -2482,7 +2481,7 @@ virtnet_bpf_verify_insn(struct bpf_verifier_env *env, int insn_idx,
 			continue;
 
 		printk("found map access at idx %d! fd %d\n", i, insn->imm);
-
+#if 0
 		f = fdget(insn->imm);
 		map = __bpf_map_get(f);
 		if (IS_ERR(map)) {
@@ -2492,6 +2491,7 @@ virtnet_bpf_verify_insn(struct bpf_verifier_env *env, int insn_idx,
 				insn->imm);
 			return -EINVAL;
 		}
+#endif
 
 		printk("find fd %d in imm\n", insn->imm);
 		virtnet_map = virtnet_get_bpf_map(vi, map);
@@ -2506,7 +2506,7 @@ virtnet_bpf_verify_insn(struct bpf_verifier_env *env, int insn_idx,
 		printk("replace it with %d\n", virtnet_map->id);
 		insn->imm = virtnet_map->id;
 
-		fdput(f);
+//		fdput(f);
 	}
 
 	return 0;
@@ -2621,9 +2621,21 @@ static int virtnet_xdp_set_prog(struct virtnet_info *vi, struct netdev_bpf *bpf)
 	if (err)
 		return err;
 
+	{
+		struct bpf_prog *old_prog;
+
+		old_prog = rtnl_dereference(vi->xdp_prog);
+		rcu_assign_pointer(vi->xdp_prog, prog);
+
+		if (old_prog)
+			bpf_prog_put(old_prog);
+	}
+
+#if 0
 	err = virtnet_xdp_set(vi->dev, prog, bpf->extack);
 	if (err)
 		return err;
+#endif
 
 	printk("prog->len %d total %d\n",
 		prog->len, prog->len * sizeof(prog->insnsi[0]));
@@ -2647,6 +2659,7 @@ static int virtnet_xdp_set_prog(struct virtnet_info *vi, struct netdev_bpf *bpf)
 		err = -EFAULT;
 		return err;
 	}
+
 	printk("offload to host successfuly!\n");
 
 	vi->xdp_flags = bpf->flags;
@@ -2666,11 +2679,18 @@ static int virtnet_bpf_ctrl_entry_op(struct bpf_offloaded_map *offmap,
 				     u8 *out_key, u8 *out_value)
 {
 	struct bpf_map *map = &offmap->map;
-	struct virtnet_bpf_map *virtnet_map = offmap->dev_priv;
-	struct virtnet_info *vi = virtnet_map ->vi;
-	struct virtio_net_ctrl_ebpf_map *ctrl = &vi->ctrl->ebpf;
+	struct virtnet_bpf_map *virtnet_map;
+	struct virtnet_info *vi;
+	struct virtio_net_ctrl_ebpf_map *ctrl;
 	struct scatterlist sg;
 
+	printk("map %p\n", map);
+	virtnet_map = offmap->dev_priv;
+	printk("virt map %p\n", virtnet_map);
+	vi = virtnet_map->vi;
+	printk("vi %p\n", vi);
+	ctrl = &vi->ctrl->ebpf;
+
 	/* Copy inputs */
 	if (key)
 		memcpy(&ctrl->key, key, map->key_size);
@@ -2783,6 +2803,7 @@ static int virtnet_bpf_map_alloc(struct virtnet_info *vi,
 
 	virtnet_map->offmap = offmap;
 	virtnet_map->id = ctrl->map_fd;
+	virtnet_map->vi = vi;
 
 	printk("success get map id from host %d\n", ctrl->map_fd);
