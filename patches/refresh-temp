Bottom: 309ef252e1f9667bf8c9a77d5f617ad5da03bc46
Top:    3274db35d47c5c8ee3315b6b1f1e45d60db832f3
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-26 17:15:48 +0800

Refresh of debug

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index c49cedc..baf65cd 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2001,7 +2001,7 @@ static int vhost_read_indices(struct vhost_virtqueue *vq, u16 num)
 	printk("vq %p read indices tail %d read_tail %d head %d\n",
 		vq, indices->tail, indices->read_tail, indices->head);
 	if (indices->read_tail != indices->tail)
-		printk("vq %p read_tail is not equal to tail\n", vq);
+		printk("BUG vq %p read_tail is not equal to tail\n", vq);
 
 	printk("vq %p last_avail is %d\n", vq, vq->last_avail_idx);
 	if (unlikely(vhost_get_avail(vq, avail_idx, &vq->avail->idx))) {
@@ -2090,14 +2090,6 @@ static int vhost_read_descs(struct vhost_virtqueue *vq, int num)
 	printk("vq %p indices head %d indices tail %d\n",
 		vq, indices->head, indices->tail);
 
-	if (unlikely(indices->head == indices->tail)) {
-		ret = vhost_read_indices(vq, num);
-		if (unlikely(ret < 0)) {
-			printk("vq %p no new indices!\n", vq);
-			goto err;
-		}
-	}
-
 	descs->last_desc.flags = 0;
 	printk("vq %p want to read desc from indices tail %d head %d\n",
 		vq, indices->tail, indices->head);
@@ -2154,40 +2146,38 @@ static struct vring_desc *vhost_next_desc(struct vhost_virtqueue *vq,
 	struct vhost_descs *descs = &vq->descs;
 	struct vhost_indices *indices = &vq->indices;
 	struct vring_desc *desc;
+	int ret;
+
+	if (indices->read_tail == indices->head) {
+		ret = vhost_read_indices(vq, 64);
+		if (unlikely(ret < 0)) {
+			printk("vq %p fail to read indices!\n", vq);
+			return ERR_PTR(-EFAULT);
+		}
+		if (ret == 0)
+			return NULL;
+	}
 
-	printk("vq %p desc->tail %d, desc->head %d\n",
-		vq, descs->tail, descs->head);
+	/* When reached here, we're sure we have indices cached */
 	if (descs->tail == descs->head) {
-		int ret = vhost_read_descs(vq, 64);
-		if (ret < 0) {
+		ret = vhost_read_descs(vq, 64);
+		if (ret) {
 			printk("vq %p fail to read descs!\n", vq);
 			return ERR_PTR(-EFAULT);
 		}
-		if (indices->read_tail == indices->head) {
-			printk("vq %p no new heads!\n", vq);
+		if (descs->tail == descs->head) {
+			printk("BUG: vq %p no new heads but indices!\n", vq);
 			return NULL;
 		}
 	}
 
 	if (advance) {
-		/* This happens when we read descs more than indices */
-		if (indices->read_tail == indices->head) {
-			int ret = vhost_read_indices(vq, 64);
-			if (ret < 0) {
-				printk("vq %p fail to read indices\n", vq);
-				return ERR_PTR(-EFAULT);
-			}
-			if (ret == 0) {
-				/* BUG() */
-				return NULL;
-			}
-		}
 		printk("vq %p adv read tail is %d head %d\n",
 			vq, indices->read_tail, indices->head);
 		*head = indices->indices[indices->read_tail++];
 	}
-	desc = &descs->descs[descs->tail++];
 
+	desc = &descs->descs[descs->tail++];
 	printk("vq %p advance %d desc %p head %d\n",
 		vq, advance, desc, *head);
 	return desc;
