Bottom: 298fa1d4fa60e340b892d6dd6919c30c938f8108
Top:    64a704f6d45dd12a8651f0dde7f71202198a0899
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-11-15 13:38:36 +0800

Refresh of tun-rx-batching

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 1588469..9c6a933 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -1296,7 +1296,11 @@ static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 	skb_probe_transport_header(skb, 0);
 
 	rxhash = skb_get_hash(skb);
-	netif_rx_ni(skb);
+
+	if (more)
+		netif_rx_queued(skb);
+	else
+		netif_rx_ni(skb);
 
 	stats = get_cpu_ptr(tun->pcpu_stats);
 	u64_stats_update_begin(&stats->syncp);
@@ -1319,7 +1323,8 @@ static ssize_t tun_chr_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	if (!tun)
 		return -EBADFD;
 
-	result = tun_get_user(tun, tfile, NULL, from, file->f_flags & O_NONBLOCK);
+	result = tun_get_user(tun, tfile, NULL, from,
+			      file->f_flags & O_NONBLOCK, false);
 
 	tun_put(tun);
 	return result;
@@ -1579,7 +1584,8 @@ static int tun_sendmsg(struct socket *sock, struct msghdr *m, size_t total_len)
 		return -EBADFD;
 
 	ret = tun_get_user(tun, tfile, m->msg_control, &m->msg_iter,
-			   m->msg_flags & MSG_DONTWAIT);
+			   m->msg_flags & MSG_DONTWAIT,
+			   m->msg_flags & MSG_MORE);
 	tun_put(tun);
 	return ret;
 }
