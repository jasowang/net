Bottom: f0f8fa3629cabc6f95ecf42c902897ec4f755243
Top:    4ff61e9c5e98a823f736525f19acf93f75e99d2f
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-02-16 17:56:16 +0800

Refresh of virtio-net-optimize-small

---

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index aa7dc5d..857054c 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -461,7 +461,7 @@ static struct sk_buff *receive_small(struct net_device *dev,
 	rcu_read_unlock();
 
 	skb = build_skb(buf + vi->hdr_len, GOOD_PACKET_LEN);
-	skb_trim(skb, len);
+	skb_put(skb, len);
 	memcpy(skb_vnet_hdr(skb), buf, vi->hdr_len);
 
 	return skb;
@@ -812,10 +812,8 @@ static int add_recvbuf_small(struct virtnet_info *vi, struct receive_queue *rq,
 		return -ENOMEM;
 
 	buf = (char *)page_address(alloc_frag->page) + alloc_frag->offset;
-	sg_init_table(rq->sg, 1);
-	sg_set_buf(rq->sg + 1, buf + NET_IP_ALIGN + xdp_headroom,
-		   GOOD_PACKET_LEN);
-
+	buf += NET_IP_ALIGN + xdp_headroom;
+	sg_init_one(rq->sg, buf, GOOD_PACKET_LEN);
 	err = virtqueue_add_inbuf(rq->vq, rq->sg, 1, buf, gfp);
 	if (err < 0)
 		put_page(virt_to_head_page(buf));
