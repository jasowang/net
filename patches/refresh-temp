Bottom: b68f6bade7c2421ee33ccc51a56b0334e6b2dd10
Top:    6e795d1e2de134360b9bdd7a4eacd13dc50a0ba7
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-01-09 19:40:39 +0800

Refresh of vhost_net-batch-tx-descriptor

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index d643260..7de0add 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -312,6 +312,11 @@ static void vhost_vq_reset(struct vhost_dev *dev,
 	vq->busyloop_timeout = 0;
 	vq->umem = NULL;
 	vq->iotlb = NULL;
+	vq->current_desc = 0;
+	memset(vq->descs,
+	       0, sizeof(struct vhost_translated_desc) * VHOST_MAX_TX_BATCHED);
+	vq->current_desc = 0;
+	vq->max_desc = 0;
 }
 
 static int vhost_worker(void *data)
@@ -2054,6 +2059,49 @@ int vhost_get_vq_desc(struct vhost_virtqueue *vq,
 }
 EXPORT_SYMBOL_GPL(vhost_get_vq_desc);
 
+int vhost_get_vq_desc_batched(struct vhost_virtqueue *vq, struct iovec **iov,
+			      unsigned int *out_num, unsigned int *in_num,
+			      struct vhost_log *log, unsigned int *log_num)
+{
+	int offset, r;
+
+again:
+	if (vq->max_desc) {
+		struct vhost_translated_desc *desc =
+		       &vq->descs[vq->current_desc];
+		*iov = vq->iov + desc->offset;
+		*out_num = desc->out_num;
+		*in_num = desc->in_num;
+		*log_num = desc->log_num;
+
+		if (vq->current_desc == vq->max_desc)
+			vq->current_desc = vq->max_desc = 0;
+		else
+			vq->current_desc++;
+
+		return 0;
+	}
+
+	offset = 0;
+	while (vq->max_desc < VHOST_MAX_TX_BATCHED) {
+		struct vhost_translated_desc *desc =
+		       &vq->descs[vq->max_desc];
+
+		r = vhost_get_vq_desc(vq, vq->iov + offset, UIO_MAXIOV,
+				     &desc->out_num, &desc->in_num,
+				     log, &desc->log_num);
+		if (r || r == vq->num)
+			break;
+		++vq->max_desc;
+	}
+
+	if (vq->max_desc)
+		goto again;
+
+	return r;
+}
+EXPORT_SYMBOL_GPL(vhost_get_vq_desc_batched);
+
 /* Reverse the effect of vhost_get_vq_desc. Useful for error handling. */
 void vhost_discard_vq_desc(struct vhost_virtqueue *vq, int n)
 {
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index 59c3567..0a7800c 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -76,6 +76,15 @@ struct vhost_umem {
 	int numem;
 };
 
+struct vhost_translated_desc {
+	int offset;
+	unsigned int out_num;
+	unsigned int in_num;
+	unsigned int log_num;
+};
+
+#define VHOST_MAX_TX_BATCHED 8
+
 /* The virtqueue structure describes a queue attached to a device. */
 struct vhost_virtqueue {
 	struct vhost_dev *dev;
@@ -124,6 +133,9 @@ struct vhost_virtqueue {
 	u64 log_addr;
 
 	struct iovec iov[2 * UIO_MAXIOV];
+	struct vhost_translated_desc descs[VHOST_MAX_TX_BATCHED];
+	int current_desc;
+	int max_desc;
 	struct iovec iotlb_iov[64];
 	struct iovec *indirect;
 	struct vring_used_elem *heads;
