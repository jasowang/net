Bottom: cfcf7952fffaa38aea2f5e3ad873fd41b58ac647
Top:    3b21fbd54d4b3f98b9248eb2f0247a00d61a0176
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-09-05 15:03:57 +0800

Refresh of vhost-prefetch-vring

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index e3869ad..df603de 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -2043,15 +2043,17 @@ int __vhost_get_vq_desc(struct vhost_virtqueue *vq,
 			struct iovec iov[], unsigned int iov_size,
 			unsigned int *out_num, unsigned int *in_num,
 			struct vhost_log *log, unsigned int *log_num,
-			struct vring_desc *desc,
+			struct vring_desc *d,
 			__virtio16 head)
 {
-	struct vring_desc d;
+	struct vring_desc vring_desc, *desc = &vring_desc;
 	unsigned int i, found = 0;
 	int ret = 0, access;
 
-	if (!desc)
-		desc = &d;
+	if (!d)
+		desc = &vring_desc;
+	else
+		desc = d;
 
 	/* If their number is silly, that's an error. */
 	if (unlikely(head > vq->num)) {
@@ -2079,13 +2081,17 @@ int __vhost_get_vq_desc(struct vhost_virtqueue *vq,
 			       i, vq->num, head);
 			return -EINVAL;
 		}
-		ret = vhost_copy_from_user(vq, desc, vq->desc + i,
-					   sizeof desc[0]);
-		if (unlikely(ret)) {
-			vq_err(vq, "Failed to get descriptor: idx %d addr %p\n",
-			       i, vq->desc + i);
-			return -EFAULT;
-		}
+		if (!d) {
+			ret = vhost_copy_from_user(vq, desc, vq->desc + i,
+						   sizeof desc[0]);
+			if (unlikely(ret)) {
+				vq_err(vq, "Failed to get descriptor: "
+	                                   "idx %d addr %p\n",
+					i, vq->desc + i);
+				return -EFAULT;
+			}
+		} else
+			d = NULL;
 		if (desc->flags & cpu_to_vhost16(vq, VRING_DESC_F_INDIRECT)) {
 			ret = get_indirect(vq, iov, iov_size,
 					   out_num, in_num,
diff --git a/samples/bpf/xdp1_kern.c b/samples/bpf/xdp1_kern.c
index 2197421..a4b89d3 100644
--- a/samples/bpf/xdp1_kern.c
+++ b/samples/bpf/xdp1_kern.c
@@ -51,6 +51,8 @@ int xdp_prog1(struct xdp_md *ctx)
 	u64 nh_off;
 	u32 ipproto;
 
+	return rc;
+
 	nh_off = sizeof(*eth);
 	if (data + nh_off > data_end)
 		return rc;
