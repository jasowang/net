Bottom: 5c87f7eeb17ab02a802f7046f904e2bbafa3233b
Top:    7068d631f5649797d65b9d0d3094741aa3e258d1
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-11-29 15:00:17 +0800

Refresh of tuntap-napi

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 8922a8c..7ded8ae 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -642,13 +642,9 @@ static int tun_poll(struct napi_struct *napi, int budget)
 			return received;
 	}
 
-	if (received < budget) {
-		napi_complete(napi);
-		if (!skb_queue_empty(input_queue) &&
-		    unlikely(napi_schedule_prep(napi))) {
-			__napi_schedule(napi);
-		}
-	}
+	napi_complete(napi);
+	if (!skb_queue_empty(input_queue))
+		napi_schedule(napi);
 
 	return received;
 }
@@ -1177,6 +1173,24 @@ static struct sk_buff *tun_alloc_skb(struct tun_file *tfile,
 	return skb;
 }
 
+static int tun_enqueue(struct tun_file *tfile, struct sk_buff *skb)
+{
+	struct sk_buff_head *list = &tfile->socket.sk->sk_write_queue;
+
+	spin_lock(&list->lock);
+	if (skb_queue_len(list) >= 1)
+		goto drop;
+	__skb_queue_tail(list, skb);
+	napi_schedule(&tfile->napi);
+	spin_unlock(&list->lock);
+
+	return 0;
+drop:
+	spin_unlock(&list->lock);
+	kfree_skb(skb);
+	return -EFAULT;
+}
+
 /* Get packet from user space buffer */
 static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 			    void *msg_control, struct iov_iter *from,
@@ -1333,14 +1347,18 @@ static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,
 	skb_queue_tail(&tfile->socket.sk->sk_write_queue, skb);
 
 	local_bh_disable();
-	napi_schedule(&tfile->napi);
+	err = tun_enqueue(tfile, skb);
 	/* process bh soon */
 	local_bh_enable();
 
 	stats = get_cpu_ptr(tun->pcpu_stats);
 	u64_stats_update_begin(&stats->syncp);
-	stats->rx_packets++;
-	stats->rx_bytes += len;
+	if (!err) {
+		stats->rx_packets++;
+		stats->rx_bytes += len;
+	} else {
+		stats->rx_dropped++;
+	}
 	u64_stats_update_end(&stats->syncp);
 	put_cpu_ptr(stats);
