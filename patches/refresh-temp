Bottom: 0b817a0fc75ae7ba1ed77e98ddc860b934936a72
Top:    d10a5de966bf9990b657c2123c21608c80ab483f
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-06-13 14:00:08 +0800

Refresh of vhost-introduce-new-ioctls-to

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index d69a591..577b183 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -1035,9 +1035,7 @@ ssize_t vhost_chr_write_iter(struct vhost_dev *dev,
 
 	switch (type) {
 	case VHOST_IOTLB_MSG:
-		/* There maybe a hole after type for V1 message type,
-		 * so skip it here.
-		 */
+		/* There maybe a hole in V1 message type, skip it here. */
 		offset = offsetof(struct vhost_msg, iotlb) - sizeof(int);
 		break;
 	case VHOST_IOTLB_MSG_V2:
@@ -1052,10 +1050,9 @@ ssize_t vhost_chr_write_iter(struct vhost_dev *dev,
 	ret = copy_from_iter(&msg, sizeof(msg), from);
 	if (ret != sizeof(msg))
 		goto done;
-	if (vhost_process_iotlb_msg(dev, &msg)) {
+	if (vhost_process_iotlb_msg(dev, &msg))
 		ret = -EFAULT;
 		goto done;
-	}
 
 	ret = (type == VHOST_IOTLB_MSG) ? sizeof(struct vhost_msg) :
 		                          sizeof(struct vhost_msg_v2);
@@ -1120,8 +1117,7 @@ ssize_t vhost_chr_read_iter(struct vhost_dev *dev, struct iov_iter *to,
 		if (node->msg.type == VHOST_IOTLB_MSG_V2) {
 			ret = copy_to_iter(&node->msg_v2, sizeof(node->msg_v2),
 					   to);
-			if (ret != sizeof(node->msg_v2) ||
-			    node->msg_v2.type != VHOST_IOTLB_MISS) {
+			if (ret != sizeof(node->msg_v2)) {
 				kfree(node);
 				return ret;
 			}
@@ -1147,7 +1143,7 @@ static int vhost_iotlb_miss(struct vhost_virtqueue *vq, u64 iova, int access)
 	struct vhost_msg_node *node;
 	struct vhost_iotlb_msg *msg;
 
-	node = vhost_new_msg(vq, VHOST_IOTLB_MISS);
+	node = vhost_new_msg(vq);
 	if (!node)
 		return -ENOMEM;
 
@@ -2369,13 +2365,12 @@ void vhost_disable_notify(struct vhost_dev *dev, struct vhost_virtqueue *vq)
 EXPORT_SYMBOL_GPL(vhost_disable_notify);
 
 /* Create a new message. */
-struct vhost_msg_node *vhost_new_msg(struct vhost_virtqueue *vq, int type)
+struct vhost_msg_node *vhost_new_msg(struct vhost_virtqueue *vq)
 {
 	struct vhost_msg_node *node = kmalloc(sizeof *node, GFP_KERNEL);
 	if (!node)
 		return NULL;
 	node->vq = vq;
-	node->msg.type = type;
 	return node;
 }
 EXPORT_SYMBOL_GPL(vhost_new_msg);
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index 466ef75..86da26c 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -208,7 +208,7 @@ int vhost_log_write(struct vhost_virtqueue *vq, struct vhost_log *log,
 		    unsigned int log_num, u64 len);
 int vq_iotlb_prefetch(struct vhost_virtqueue *vq);
 
-struct vhost_msg_node *vhost_new_msg(struct vhost_virtqueue *vq, int type);
+struct vhost_msg_node *vhost_new_msg(struct vhost_virtqueue *vq);
 void vhost_enqueue_msg(struct vhost_dev *dev,
 		       struct list_head *head,
 		       struct vhost_msg_node *node);
