Bottom: dbcd73347cc0ce46dda61309f099631643a3e393
Top:    cff8113ba4e59ff3be2b934f239f6499fde57c56
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-07-06 14:25:01 +0800

Refresh of virtio-net-basic-ebpf-offload

---

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 2134f3b..7c94791 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -2527,6 +2527,9 @@ static int virtnet_xdp_offload_prog(struct virtnet_info *vi,
 
 static int virtnet_xdp_set_prog(struct virtnet_info *vi, struct netdev_bpf *bpf)
 {
+	struct virtio_device *vdev = vi->vdev;
+	struct bpf_prog *prog = bpf->prog;
+	struct scatterlist sg;
 	int err;
 
 	if (vi->xdp_prog && (bpf->flags ^ vi->xdp_flags) & XDP_FLAGS_MODES) {
@@ -2543,10 +2546,20 @@ static int virtnet_xdp_set_prog(struct virtnet_info *vi, struct netdev_bpf *bpf)
 	if (err)
 		return err;
 
-	err = virtnet_xdp_set(vi->dev, bpf->prog, bpf->extack);
+	err = virtnet_xdp_set(vi->dev, prog, bpf->extack);
 	if (err)
 		return err;
 
+	sg_init_one(&sg, prog->insnsi, prog->len * sizeof(prog->insnsi[0]));
+	if (!virtnet_send_command(vi, VIRTIO_NET_CTRL_EBPF,
+				  VIRTIO_NET_CTRL_EBPF_SET_OFFLOAD_PROG,
+				  &sg)) {
+		dev_warn(&vdev->dev, "Failed to set bpf offload prog\n");
+		err = -EFAULT;
+		return err;
+	}
+	printk("offload to host successfuly!\n");
+
 	vi->xdp_flags = bpf->flags;
 
 	if (!bpf->prog)
