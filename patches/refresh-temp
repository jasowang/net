Bottom: 6aa799322ab5e0b8e11b4c228450ae69e97596e7
Top:    abd1ac03937ac1809ad80149b55bb6f51db2d3d0
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-01-29 10:45:42 +0800

Refresh of vhost-introduce-helper-to

---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 088afe5..cb05734 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -440,6 +440,7 @@ void vhost_dev_init(struct vhost_dev *dev,
 		vq->indirect = NULL;
 		vq->heads = NULL;
 		vq->dev = dev;
+		vq->avails.head = vq->avails.tail = 0;
 		mutex_init(&vq->mutex);
 		vhost_vq_reset(dev, vq);
 		if (vq->handle_kick)
@@ -2414,15 +2415,11 @@ struct vhost_msg_node *vhost_dequeue_msg(struct vhost_dev *dev,
 }
 EXPORT_SYMBOL_GPL(vhost_dequeue_msg);
 
-int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
-				struct vring_used_elem *heads,
-				u16 num)
+int vhost_read_indices(struct vhost_virtqueue *vq, u16 num)
 {
-	int ret, ret2;
-	u16 last_avail_idx, last_used_idx, total, copied;
-	__virtio16 avail_idx;
-	struct vring_used_elem __user *used;
-	int i;
+	__virtio16 avail_idx, *heads = vq->avails.idx;
+	u16 last_avail_idx, last_used_idx;
+	int i, ret, total;
 
 	if (unlikely(vhost_get_avail(vq, avail_idx, &vq->avail->idx))) {
 		vq_err(vq, "Failed to access avail idx at %p\n",
@@ -2434,38 +2431,24 @@ int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
 	total = vq->avail_idx - vq->last_avail_idx;
 	ret = total = min(total, num);
 
-	for (i = 0; i < ret; i++) {
-		ret2 = vhost_get_avail(vq, heads[i].id,
+	for (i = 0; i < total; i++) {
+		ret = vhost_get_avail(vq, heads[i],
 				      &vq->avail->ring[last_avail_idx]);
-		if (unlikely(ret2)) {
+		if (unlikely(ret)) {
 			vq_err(vq, "Failed to get descriptors\n");
 			return -EFAULT;
 		}
 		last_avail_idx = (last_avail_idx + 1) & (vq->num - 1);
 	}
 
-	last_used_idx = vq->last_used_idx & (vq->num - 1);
-	while (total) {
-		copied = min((u16)(vq->num - last_used_idx), total);
-		ret2 = vhost_copy_to_user(vq,
-					  &vq->used->ring[last_used_idx],
-					  &heads[ret - total],
-					  copied * sizeof(*used));
-
-		if (unlikely(ret2)) {
-			vq_err(vq, "Failed to update used ring!\n");
-			return -EFAULT;
-		}
-
-		last_used_idx = 0;
-		total -= copied;
-	}
-
 	/* Only get avail ring entries after they have been exposed by guest. */
 	smp_rmb();
-	return ret;
+
+	vq->avails.head = total;
+	vq->avails.tail = 0;
+
+	return total;
 }
-EXPORT_SYMBOL(vhost_prefetch_desc_indices);
 
 static int __init vhost_init(void)
 {
diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h
index 1527f5c..d6680c3 100644
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -27,6 +27,12 @@ struct vhost_work {
 	unsigned long		  flags;
 };
 
+struct vhost_avails {
+	__virtio16 idx[64];
+	int head;
+	int tail;
+};
+
 /* Poll a file (eventfd or socket) */
 /* Note: there's nothing vhost specific about this structure. */
 struct vhost_poll {
@@ -150,6 +156,8 @@ struct vhost_virtqueue {
 	bool user_be;
 #endif
 	u32 busyloop_timeout;
+
+	struct vhost_avails avails;
 };
 
 struct vhost_msg_node {
@@ -224,9 +232,6 @@ ssize_t vhost_chr_read_iter(struct vhost_dev *dev, struct iov_iter *to,
 ssize_t vhost_chr_write_iter(struct vhost_dev *dev,
 			     struct iov_iter *from);
 int vhost_init_device_iotlb(struct vhost_dev *d, bool enabled);
-int vhost_prefetch_desc_indices(struct vhost_virtqueue *vq,
-				struct vring_used_elem *heads,
-				u16 num);
 
 #define vq_err(vq, fmt, ...) do {                                  \
 		pr_debug(pr_fmt(fmt), ##__VA_ARGS__);       \
