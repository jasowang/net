Bottom: 1f8423bf887180ad2d3a0d5636edac3430136c66
Top:    b032160065f760943507e40ad9033fe529236258
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-11-29 15:12:15 +0800

Refresh of tuntap-napi

---

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 8925d89..594aa93 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -628,10 +628,8 @@ static void tun_detach_all(struct net_device *dev)
 		module_put(THIS_MODULE);
 }
 
-static sk_buff *tun_dequeue(struct tfile *tfile)
+static struct sk_buff *tun_dequeue(struct sk_buff_head *input_queue)
 {
-	struct sk_buff_head *input_queue =
-	       &tfile->socket.sk->sk_write_queue;
 	struct sk_buff *skb;
 
 	spin_lock(&input_queue->lock);
@@ -644,10 +642,12 @@ static sk_buff *tun_dequeue(struct tfile *tfile)
 static int tun_poll(struct napi_struct *napi, int budget)
 {
 	struct tun_file *tfile = container_of(napi, struct tun_file, napi);
+	struct sk_buff_head *input_queue =
+	       &tfile->socket.sk->sk_write_queue;
 	struct sk_buff *skb;
 	unsigned int received = 0;
 
-	while ((skb = tun_dequeue(tfile))) {
+	while ((skb = tun_dequeue(input_queue))) {
 		netif_receive_skb(skb);
 		if (++received >= budget)
 			return received;
