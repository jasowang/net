Bottom: 41236090cac37182e8671bc14445dd44cd8012cc
Top:    2062214487cfa32e8d5d1efe3c47f7be1954db9a
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-02-13 13:40:00 +0800

Refresh of virtio-net-optimize

---

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 3eacc43..40fae5b 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -720,10 +720,10 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 }
 
 static void receive_buf(struct virtnet_info *vi, struct receive_queue *rq,
-			void *buf, unsigned int len)
+			void *buf, unsigned int len,
+			unsigned long *packets, unsigned long *bytes)
 {
 	struct net_device *dev = vi->dev;
-	struct virtnet_stats *stats = this_cpu_ptr(vi->stats);
 	struct sk_buff *skb;
 	struct virtio_net_hdr_mrg_rxbuf *hdr;
 
@@ -754,10 +754,8 @@ static void receive_buf(struct virtnet_info *vi, struct receive_queue *rq,
 
 	hdr = skb_vnet_hdr(skb);
 
-	u64_stats_update_begin(&stats->rx_syncp);
-	stats->rx_bytes += skb->len;
-	stats->rx_packets++;
-	u64_stats_update_end(&stats->rx_syncp);
+	*packets += 1;
+	*bytes += skb->len;
 
 	if (hdr->hdr.flags & VIRTIO_NET_HDR_F_DATA_VALID)
 		skb->ip_summed = CHECKSUM_UNNECESSARY;
@@ -996,10 +994,13 @@ static int virtnet_receive(struct receive_queue *rq, int budget)
 	struct virtnet_info *vi = rq->vq->vdev->priv;
 	unsigned int len, received = 0;
 	void *buf;
+	unsigned long packets = 0;
+	unsigned long bytes = 0;
+	struct virtnet_stats *stats = this_cpu_ptr(vi->stats);
 
 	while (received < budget &&
 	       (buf = virtqueue_get_buf(rq->vq, &len)) != NULL) {
-		receive_buf(vi, rq, buf, len);
+		receive_buf(vi, rq, buf, len, &packets, &bytes);
 		received++;
 	}
 
@@ -1008,6 +1009,11 @@ static int virtnet_receive(struct receive_queue *rq, int budget)
 			schedule_delayed_work(&vi->refill, 0);
 	}
 
+	u64_stats_update_begin(&stats->rx_syncp);
+	stats->rx_bytes += bytes;
+	stats->rx_packets += packets;
+	u64_stats_update_end(&stats->rx_syncp);
+
 	return received;
 }
 
@@ -1056,8 +1062,8 @@ static void free_old_xmit_skbs(struct send_queue *sq)
 	unsigned int len;
 	struct virtnet_info *vi = sq->vq->vdev->priv;
 	struct virtnet_stats *stats = this_cpu_ptr(vi->stats);
-	unsigned int packets = 0;
-	unsigned int bytes = 0;
+	unsigned long packets = 0;
+	unsigned long bytes = 0;
 
 	while ((skb = virtqueue_get_buf(sq->vq, &len)) != NULL) {
 		pr_debug("Sent skb %p\n", skb);
@@ -1071,7 +1077,7 @@ static void free_old_xmit_skbs(struct send_queue *sq)
 	/* Avoid overhead when no packets have been processed
 	 * happens when called speculatively from start_xmit. */
 	if (!packets)
-		return 0;
+		return;
 
 	u64_stats_update_begin(&stats->tx_syncp);
 	stats->tx_bytes += bytes;
