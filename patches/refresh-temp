Bottom: 0f35fd9915f947d303d9fdd1e0181d3b3f9d6699
Top:    f318336b00c10a0f1e94a7b068b705d8eb8944c4
Author: Jason Wang <jasowang@redhat.com>
Date:   2016-12-20 18:53:17 +0800

Refresh of macvtap-xdp-fast-rx-support

---

diff --git a/drivers/net/ethernet/mellanox/mlx4/en_rx.c b/drivers/net/ethernet/mellanox/mlx4/en_rx.c
index c413871..1c43785 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_rx.c
@@ -927,7 +927,7 @@ int mlx4_en_process_rx_cq(struct net_device *dev, struct mlx4_en_cq *cq, int bud
 			case XDP_PASS:
 				break;
 			case XDP_HOLD:
-				goto next;
+				goto consumed;
 			case XDP_TX:
 				if (likely(!mlx4_en_xmit_frame(ring, frags, dev,
 							length, cq->ring,
diff --git a/drivers/net/macvtap.c b/drivers/net/macvtap.c
index 03327bb..cd031c5 100644
--- a/drivers/net/macvtap.c
+++ b/drivers/net/macvtap.c
@@ -1024,6 +1024,8 @@ static ssize_t macvtap_do_read(struct macvtap_queue *q,
 	return ret;
 }
 
+static int macvtap_peek_len(struct socket *sock);
+
 static ssize_t macvtap_do_read_xdp(struct macvtap_queue *q,
 				   struct iov_iter *to,
 				   int noblock)
@@ -1035,6 +1037,7 @@ static ssize_t macvtap_do_read_xdp(struct macvtap_queue *q,
 	if (!iov_iter_count(to))
 		return 0;
 
+	printk("peek for macvtap %d\n", macvtap_peek_len(&q->sock));
 	while (1) {
 		if (!noblock)
 			prepare_to_wait(sk_sleep(&q->sk), &wait,
@@ -1372,7 +1375,10 @@ static int macvtap_xdp_peek_len(void *data)
 {
 	struct xdp_buff *buff = data;
 
-	return buff->data_end - buff->data;
+	if (likely(buff))
+		return buff->data_end - buff->data;
+	else
+		return 0;
 }
 
 static int macvtap_peek_len(struct socket *sock)
