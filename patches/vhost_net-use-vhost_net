Bottom: f0ee32bf29fd8a4057b15230a1065cf5c3b5f9d1
Top:    5d8a805bb77b155cef6b7c249c4420df5085cd85
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-05-17 10:55:42 +0800

vhost_net: use vhost_net private page frag

Signed-off-by: Jason Wang <jasowang@redhat.com>
(cherry picked from commit 3c77fb9e9b645bb62d933778a0f5b42ea718bafc)


---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index bec4109..2cea3f1 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -133,6 +133,7 @@ struct vhost_net {
 	unsigned tx_zcopy_err;
 	/* Flush in progress. Protected by tx vq lock. */
 	bool tx_flush;
+	struct page_frag frag;
 };
 
 static unsigned vhost_net_zcopy_mask __read_mostly;
@@ -497,12 +498,13 @@ static bool vhost_has_more_pkts(struct vhost_net *net,
 #define VHOST_NET_HEADROOM 256
 #define VHOST_NET_RX_PAD (NET_IP_ALIGN + NET_SKB_PAD)
 
-static int vhost_net_build_xdp(struct vhost_net_virtqueue *nvq,
+static int vhost_net_build_xdp(struct vhost_net *n,
+			       struct vhost_net_virtqueue *nvq,
 			       struct iov_iter *from,
 			       struct xdp_buff *xdp)
 {
 	struct vhost_virtqueue *vq = &nvq->vq;
-	struct page_frag *alloc_frag = &current->task_frag;
+	struct page_frag *alloc_frag = &n->frag;
 	struct virtio_net_hdr *gso;
 	size_t len = iov_iter_count(from);
 	int buflen = SKB_DATA_ALIGN(sizeof(struct skb_shared_info));
@@ -1208,6 +1210,8 @@ static int vhost_net_open(struct inode *inode, struct file *f)
 	vhost_poll_init(n->poll + VHOST_NET_VQ_TX, handle_tx_net, EPOLLOUT, dev);
 	vhost_poll_init(n->poll + VHOST_NET_VQ_RX, handle_rx_net, EPOLLIN, dev);
 
+	n->frag.page = NULL;
+
 	f->private_data = n;
 
 	return 0;
@@ -1283,6 +1287,8 @@ static int vhost_net_release(struct inode *inode, struct file *f)
 	kfree(n->vqs[VHOST_NET_VQ_RX].rxq.queue);
 	kfree(n->dev.vqs);
 	kvfree(n);
+	if (n->frag.page)
+		put_page(n->frag.page);
 	return 0;
 }
