Bottom: 064ba81ee32a906530fa98bbfdc6abc33f68241f
Top:    170d3ecb9c357d27c1d1930b316ded3d50dbafde
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-07-13 11:27:15 +0800

xdp1_user: support ifindex for XDP offloading

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/samples/bpf/xdp1_user.c b/samples/bpf/xdp1_user.c
index b02c5315..fcb413d 100644
--- a/samples/bpf/xdp1_user.c
+++ b/samples/bpf/xdp1_user.c
@@ -63,8 +63,9 @@ static void usage(const char *prog)
 	fprintf(stderr,
 		"usage: %s [OPTS] IFINDEX\n\n"
 		"OPTS:\n"
-		"    -S    use skb-mode\n"
-		"    -N    enforce native mode\n",
+		"    -S           use skb-mode\n"
+		"    -N           enforce native mode\n"
+		"    -D ifindex   offload mode\n",
 		prog);
 }
 
@@ -74,7 +75,7 @@ int main(int argc, char **argv)
 	struct bpf_prog_load_attr prog_load_attr = {
 		.prog_type	= BPF_PROG_TYPE_XDP,
 	};
-	const char *optstr = "SN";
+	const char *optstr = "SNO";
 	int prog_fd, map_fd, opt;
 	struct bpf_object *obj;
 	struct bpf_map *map;
@@ -88,6 +89,9 @@ int main(int argc, char **argv)
 		case 'N':
 			xdp_flags |= XDP_FLAGS_DRV_MODE;
 			break;
+		case 'O':
+			xdp_flags |= XDP_FLAGS_HW_MODE;
+			break;
 		default:
 			usage(basename(argv[0]));
 			return 1;
@@ -108,6 +112,8 @@ int main(int argc, char **argv)
 
 	snprintf(filename, sizeof(filename), "%s_kern.o", argv[0]);
 	prog_load_attr.file = filename;
+	if (xdp_flags & XDP_FLAGS_HW_MODE)
+		prog_load_attr.ifindex = ifindex;
 
 	if (bpf_prog_load_xattr(&prog_load_attr, &obj, &prog_fd))
 		return 1;
