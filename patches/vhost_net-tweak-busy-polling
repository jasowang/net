Bottom: 85ee0b6d1d77a6f10e76d4279e969a719b3ea428
Top:    947601849fbe471f52bd489382aa9a2b8e6ea3c0
Author: Jason Wang <jasowang@redhat.com>
Date:   2017-09-14 17:09:09 +0800

vhost_net: tweak busy polling loop logic

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c
index b2509ab..e29150a 100644
--- a/drivers/vhost/net.c
+++ b/drivers/vhost/net.c
@@ -406,10 +406,12 @@ static int vhost_net_tx_get_vq_desc(struct vhost_net *net,
 	if (r == vq->num && vq->busyloop_timeout) {
 		preempt_disable();
 		endtime = local_clock() + vq->busyloop_timeout;
-		while (vhost_can_busy_poll(vq->dev, endtime) &&
-		       vhost_vq_avail_empty(vq->dev, vq) &&
-		       !vhost_has_work(&net->dev))
+		do {
+			if (!vhost_vq_avail_empty(vq->dev, vq) ||
+			    vhost_has_work(&net->dev))
+				break;
 			cpu_relax();
+		} while (vhost_can_busy_poll(vq->dev, endtime));
 		preempt_enable();
 		r = vhost_get_vq_desc(vq, vq->iov, ARRAY_SIZE(vq->iov),
 				      out_num, in_num, NULL, NULL);
@@ -615,11 +617,13 @@ static int vhost_net_rx_peek_head_len(struct vhost_net *net, struct sock *sk)
 		preempt_disable();
 		endtime = local_clock() + vq->busyloop_timeout;
 
-		while (vhost_can_busy_poll(&net->dev, endtime) &&
-		       !sk_has_rx_data(sk) &&
-		       vhost_vq_avail_empty(&net->dev, vq) &&
-		       !vhost_has_work(&net->dev))
+		do {
+			if (sk_has_rx_data(sk) ||
+			    !vhost_vq_avail_empty(&net->dev, vq) ||
+			    vhost_has_work(&net->dev))
+				break;
 			cpu_relax();
+		} while (vhost_can_busy_poll(&net->dev, endtime));
 
 		preempt_enable();
