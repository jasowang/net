Bottom: 16b009d5ff11da6c732bbbdcb15d96d71ed85339
Top:    b5a063b73b8c94b8fd30685e90d627a61fc762f6
Author: Jason Wang <jasowang@redhat.com>
Date:   2018-07-04 17:28:35 +0800

virtio-net: switch to use netif_receive_skb_list()

Signed-off-by: Jason Wang <jasowang@redhat.com>


---

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 53085c6..da8a81e 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -944,7 +944,7 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 
 static int receive_buf(struct virtnet_info *vi, struct receive_queue *rq,
 		       void *buf, unsigned int len, void **ctx,
-		       unsigned int *xdp_xmit)
+		       unsigned int *xdp_xmit, struct list_head *rx_list)
 {
 	struct net_device *dev = vi->dev;
 	struct sk_buff *skb;
@@ -993,7 +993,7 @@ static int receive_buf(struct virtnet_info *vi, struct receive_queue *rq,
 	pr_debug("Receiving skb proto 0x%04x len %i type %i\n",
 		 ntohs(skb->protocol), skb->len, skb->pkt_type);
 
-	napi_gro_receive(&rq->napi, skb);
+	list_add_tail(&skb->list, rx_list);
 	return ret;
 
 frame_err:
@@ -1241,21 +1241,26 @@ static int virtnet_receive(struct receive_queue *rq, int budget,
 			   unsigned int *xdp_xmit)
 {
 	struct virtnet_info *vi = rq->vq->vdev->priv;
+	struct list_head rx_list;
 	unsigned int len, received = 0, bytes = 0;
 	void *buf;
 
+	INIT_LIST_HEAD(&rx_list);
+
 	if (!vi->big_packets || vi->mergeable_rx_bufs) {
 		void *ctx;
 
 		while (received < budget &&
 		       (buf = virtqueue_get_buf_ctx(rq->vq, &len, &ctx))) {
-			bytes += receive_buf(vi, rq, buf, len, ctx, xdp_xmit);
+			bytes += receive_buf(vi, rq, buf, len, ctx,
+					     xdp_xmit, &rx_list);
 			received++;
 		}
 	} else {
 		while (received < budget &&
 		       (buf = virtqueue_get_buf(rq->vq, &len)) != NULL) {
-			bytes += receive_buf(vi, rq, buf, len, NULL, xdp_xmit);
+			bytes += receive_buf(vi, rq, buf, len, NULL,
+					     xdp_xmit, &rx_list);
 			received++;
 		}
 	}
@@ -1270,6 +1275,8 @@ static int virtnet_receive(struct receive_queue *rq, int budget,
 	rq->stats.packets += received;
 	u64_stats_update_end(&rq->stats.syncp);
 
+	netif_receive_skb_list(&rx_list);
+
 	return received;
 }
